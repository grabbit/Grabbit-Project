<?

/**
 * Implementation of hook_menu()
 */
function grabbit_tags_menu() {

  $items['tags/display'] = array( 
    'page callback' => 'grabbit_tags_display', 
    'access arguments' => array('access content')
  );

  $items['tags/save'] = array( 
    'page callback' => 'grabbit_tags_save', 
    'access arguments' => array('access content')
  );

  $items['tags/profile/save'] = array( 
    'page callback' => 'grabbit_tags_profile_save', 
    'access arguments' => array('access content')
  );

  $items['tags/delete'] = array( 
    'page callback' => 'grabbit_tags_delete', 
    'access arguments' => array('access content')
  );

  return $items;
}

function grabbit_tags_display(){
	
	$nid=$_GET['nid'];
	$type=$_GET['type'];
	
	$node=node_load($nid);
	
	if(is_array($node->tags)){
	  	foreach($node->tags as  $tag_group){
			foreach($tag_group as $tag){
			  $text[]=$tag->name;	
			}
		}	
	}
	
	print_r($text);
	
	$output = '<div class="tags-engine"><span class="all-tags">';
	
	$output = '</span><span class=""></div>';
	
}

function grabbit_tags_save(){
	
	$nid=$_GET['nid'];
	
	if($_GET['tags']){
	
		$terms=$_GET['tags'];
		$node=node_load($nid);
		$node->taxonomy=array();
		if (isset($terms)) {
           $node->taxonomy['tags'][3]=$terms;
        }

        taxonomy_node_save($node, $node->taxonomy);

	    print "OK";	// Everything went smooth

	}else{
		print "OT"; // No terms sent, so we return a no terms message to handle
	}	
}

function grabbit_tags_profile_save(){
	
	$nid=$_GET['nid'];
	$type=$_GET['type'];
	
}

function grabbit_tags_delete(){

	$nid=$_GET['nid'];
	
	if($_GET['tag']){
	
		$term=$_GET['tag'];
		$node=node_load($nid);
		foreach($node->tags[3] as $tag){
		  if($tag->name!=$term){
		    $terms[]=$tag->name;	
		  }
		}
		$terms=implode(',',$terms);
		$node->taxonomy=array();
		$node->taxonomy['tags'][3]=$terms;
        
        taxonomy_node_save($node, $node->taxonomy);

	    print "OK";	// Everything went smooth

	}else{
		print "OT"; // No terms sent, so we return a no terms message to handle
	}
	
}