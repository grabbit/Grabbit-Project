<?

/**
 * Implementation of hook_menu()
 */
function grabbit_realtime_menu() {

  $items['execute/realtime'] = array( 
    'page callback' => 'grabbit_realtime_perform', 
    'access arguments' => array('access content')
  );

  return $items;
}

function grabbit_realtime_perform(){
	global $user;
	$pannel = $_GET['pannel'];
	$last=$_GET['last_nid'];
	$last_nid=str_replace('node-','',$last);

	$result=facebook_realtime_private_view_panel_realtime($pannel,1,$last_nid);
//	print $result;
	print '<div id="node-434868" class="facebook-post clearfix even">
		<a face_id="434868" class="trash-facebook" href="JavaScript:void(0);">TR</a>
		<a class="retweet-facebook" href="JavaScript:void(0);">RT</a>
		<a class="facebook-makecomment-link" href="javascript:void(0);">Post a comment</a>
		<a href="javascript:void(0)" class="facebook_favorite" nid="434868" id="697715729_275125035729">Add to favorites</a>
		<div class="facebook-post-header"><a href="http://www.facebook.com/MiitZiitA" class="facebook-story-pic" title="MiitZiitä Pérez" target="_blank"><span class="facebook-user-pic"><img width="48" src="http://profile.ak.fbcdn.net/v22944/928/38/q697715729_9037.jpg" alt="MiitZiitä Pérez" class="facebook-image-s" target="_blank"/></span></a>
		<a href="http://www.facebook.com/MiitZiitA" class="facebook-story-name" title="MiitZiitä Pérez" target="_blank"><span class="facebook-user-name">MiitZiitä Pérez</span></a><div class="facebook-post-body">
		<div style="display: none;" class="retweet-hide"/>
		<div class="content-truncated"><div class="facebook-attachment"><span class="facebook-attach-title">All my Friends!</span><span class="facebook-attach-link"><a href="http://apps.facebook.com/foto_diaria_primo/pid:2996666237963859880/from:publisher.attachment.own.image"><img width="30" src="http://platform.ak.fbcdn.net/www/app_full_proxy.php?app=162857367075&amp;v=1&amp;size=z&amp;cksum=8283981c41d9950efa5b30119c54ac0f&amp;src=http%3A%2F%2Fhphotos-snc1.fbcdn.net%2Fhs266.snc1%2F9316_160262970729_697715729_4061096_718589_n.jpg"/></a></span></div></div><span class="facebook-date">on Fri, 01/08/2010 - 23:20</span></div>
		<div class="facebook-post-comments clearfix"/>
		<div class="facebook-comment-form">
		<div class="facebook-form">
			<form style="display: none;" id="myForm">
				<input type="textfield" required="true" maxlength="255" size="30" class="form-text" id="comment"/>
				<input type="button" onclick="javascript:void(0)" value="Comment" class="facebook_comment_submit" id="697715729_275125035729" nid="434868"/>
			</form>
		</div></div></div></div>';
}

//hook grabbit_status_form
function grabbit_realtime_grabbit_status_form(){
	drupal_add_js(drupal_get_path('module', 'grabbit_realtime').'/real_engine.js', $type = 'module');
	
}

/**
 * Creates users pannel REALTIME()
 */
function facebook_realtime_private_view_panel_realtime($param,$pagination=0, $last_nid=0){
	
	global $user;
	
	global $user_info;
	
	//It starts getting parameters from index 1, 0 is the response id
	//prepeare_status_update & prepeare_standar_update request 'name' at index 1, if it's needed to get more params, leave 'name' as first
	$params = array('name','pic_square','profile_url');
    $user_info = _get_current_user_info($params);
	
	$view = views_get_view('grabbit_public_stream');
    $view->pager['items_per_page']=30;

    $view->display['default']->display_options['filters']['uid']['value'][]=$user->uid;

    $trashes =  grabbit_favorites_get_trash('item');
   
    if($param>0){
		if($result = grabbit_panels_get_uid($user->uid,$param)){
			$GET = unserialize($result->config);
			$tags= unserialize($result->filters);
			if($tags['tags']){
			  $GET['tags']=$tags['tags'];	
			}
		  }
     }
     else{
	   $GET['blogs']="blogs";
	   $GET['news']="news";
	   $GET['show_facebook']=1;
	   $GET['show_twitter']=1;
	   $GET['show_gmail']=1;
	   $GET['show_imap']=1;
     }
    if($user->uid>0){
	  	//get FB,TW and soon GMAIL
		$view_elements = views_get_view('grabbit_public_elements');
		$view_elements->display['default']->display_options['filters']['uid']['value'][0]=$user->uid;
		$view_elements->pager['items_per_page']=30;

		$view_elements->display['default']->display_options['filters']['type']['value']['facebook']='FALSE';
		$view_elements->display['default']->display_options['filters']['type']['value']['twitter']='FALSE';
		$view_elements->display['default']->display_options['filters']['type']['value']['gmail']='FALSE';
		$view_elements->display['default']->display_options['filters']['type']['value']['imap']='FALSE';

		if($GET['show_facebook']){
			$view_elements->display['default']->display_options['filters']['type']['value']['facebook']='facebook';
		}
		if($GET['show_twitter']){
			$view_elements->display['default']->display_options['filters']['type']['value']['twitter']='twitter';
		}
		if($GET['show_gmail']){
			$view_elements->display['default']->display_options['filters']['type']['value']['gmail']='gmail';
		}
		if($GET['show_imap']){
			$view_elements->display['default']->display_options['filters']['type']['value']['imap']='imap';
		}

		if(!$GET['favorites']){
		  $view_elements->display['default']->display_options['relationships']=array();	
		}
		
		$view_elements->display['default']->display_options['filters']['nid'] = array(
		                                        'operator'=> '>',
		                                         'value'  => array(
		                                                    'value' => $last_nid,
		                                                    'min' => '', 
		                                                    'max' => ''
		                                                ),
		                                          'group' => 0,
		                                       'exposed' => '', 
		                                       'expose' => array(
		                                                    'operator' =>'', 
		                                                    'label' =>'' 
		                                                ),

		                                        'id' => 'nid',
		                                        'table' => 'node',
		                                        'field' => 'nid',
		                                        'relationship' => 'none'
		                                        );
		
		$view_elements->execute();
		foreach($view_elements->result as $node){
		  if(!in_array($node->nid,$trashes))
		  $twitface[$node->node_created]=array('time'=>$node->node_created,
		                              'value'=>$node);
	    }
		// end of elements
    }
	
	$view->display['default']->display_options['filters']['nid'] = array(
	                                        'operator'=> '>',
	                                         'value'  => array(
	                                                    'value' => $last_nid,
	                                                    'min' => '', 
	                                                    'max' => ''
	                                                ),
	                                          'group' => 0,
	                                       'exposed' => '', 
	                                       'expose' => array(
	                                                    'operator' =>'', 
	                                                    'label' =>'' 
	                                                ),

	                                        'id' => 'nid',
	                                        'table' => 'node',
	                                        'field' => 'nid',
	                                        'relationship' => 'none'
	                                        );
      
	// Filters of all kind
	$view->display['default']->display_options['filters']['type']['value']=array();
	$view->display['default']->display_options['filters']['type']['value']['blogs']='FALSE';
	$view->display['default']->display_options['filters']['type']['value']['news']='FALSE';
	if($GET['blogs'] || $GET['news']){
	  if($GET['blogs'])
	    $view->display['default']->display_options['filters']['type']['value']['blogs']='blogs';
	  if($GET['news'])
	    $view->display['default']->display_options['filters']['type']['value']['news']='news';
	}

	if(!$GET['favorites']){
	  $view->display['default']->display_options['relationships']=array();	
	}
	
	if ($GET['tags']){
		$tags = implode(" ", $GET['tags']);
		$filters[0] = $tags;
	}else{
		$filters[0] = 'all';	
	}
	if ($GET['feeds']){
		unset($view->display['default']->display_options['filters']['uid']);
		$view->display['default']->display_options['filters']['type']['value']['blogs']='blogs';
		$view->display['default']->display_options['filters']['type']['value']['news']='news';
		$tags = implode(",", $GET['feeds']);
        $filters[1] = $tags;
	}else{
		$flag = flag_get_user_flags('node', $content_id = NULL, $uid = NULL, $reset = FALSE);

		if(is_array($flag['myfeeds'])){
			
		  	foreach($flag['myfeeds'] as $my_feeds){
			  $user_feeds[]=$my_feeds->content_id;	
			}
			
			$tags = implode(",", $user_feeds);
			$filters[1] = $tags;	
		}
		else{
			$filters[1] = "all";	
		}

	}
	
	//End filters of all kind
 
	$view->set_arguments(array($filters[0],$filters[1]));	
	 
	$view->execute();

    foreach($view->result as $node){
	  if(!in_array($node->nid,$trashes))
	  $twitface[$node->node_created]=array('time'=>$node->node_created,
	                              'value'=>$node);
    }

    // prepeare the deals view according to the user's tags
	$deals_profile = content_profile_load('profile', $user->uid);
	if (count($deals_profile->taxonomy)){
	  foreach ($deals_profile->taxonomy as $term){
	    $d_tags[] = $term->tid;
	  }
	  $deals_tags = implode("+", $d_tags);
	}else{
		$deals_tags = 'all';	
	}
	
	$view_deals = views_get_view('grabbit_private_deals');
    $view_deals->pager['items_per_page']=30;

    $first_item_element= end(array_reverse($twitface)); // get the first element of the current view of items
    $last_item_element = end($twitface);//get the last element of the current view of items

    $view_deals->display['default']->display_options['filters']['created']['value']['min']=date('Y-m-d H:i:s',$last_item_element['time']);
    $view_deals->display['default']->display_options['filters']['created']['value']['max']=date('Y-m-d H:i:s',$first_item_element['time']);

    $view_deals->set_arguments(array($deals_tags));	
	$view_deals->execute();

    foreach($view_deals->result as $node){
	  $twitface[$node->node_created]=array('time'=>$node->node_created,
	                              'value'=>$node);
    }
    // end of deals view
	
	if(is_array($twitface)){
			ksort($twitface);
			$result = array_reverse($twitface);
			$rowx='even';
			foreach($result as $entry){
					if($entry['value']->nid){
						
						$node=node_load($entry['value']->nid,NULL,TRUE);
						$node->rowx=$rowx;
						switch($node->type){
							case 'facebook':
							    $actor=array('name'=>$node->field_user_name[0]['value'],
								             'url'=>$node->field_user_url[0]['value'],
								             'pic_square'=>$node->field_user_picture[0]['value']
								             );
								$commenta=array();
								$actors=array();
								if($node->field_comments[0]['value']){
									$profiles=unserialize($node->field_comments[0]['value']);
									$commenta=$profiles['comments'];	
									$actors=$profiles['profiles'];
								}
								
								if(!$node->field_attachment[0]['value']){ //STATUS UPDATE
									$target='';
									if($node->field_target[0]['value'])
									  $target=$node->field_target[0]['value'];
                                         
									$output .= prepeare_status_update($node,$actor,$target,$actors,$commenta);
									$comments=array();
									}else{
										$target='';
										if($node->field_target[0]['value'])
										  $target=$node->field_target[0]['value'];

										$output .= prepeare_standar_update($node,$actor,$target,$actors,$commenta);
										$comments=array();
									}
							
							break;
							case 'twitter':
							  $output .=theme_twitter_message($node);
							break;
							case 'gmail':
							  $comments = db_query("SELECT * FROM {comments} WHERE nid = %d ORDER BY timestamp ASC", $node->nid);
							  $output .= theme_gmail_message($comments,$node);
							break;
							case 'imap':
							  $comments = db_query("SELECT * FROM {comments} WHERE nid = %d ORDER BY timestamp ASC", $node->nid);
							  $output .= theme_imap_message($comments,$node);
							break;
							default:
							  $comments = db_query("SELECT * FROM {comments} WHERE nid = %d ORDER BY timestamp ASC", $node->nid);
							  $output .= _news_theme($comments,$node);
							break;
						}
						
					  if($rowx=='even'){
						$rowx='odd';
					  }else{
						$rowx='even';
					  }
						 
					}
			}
				
		}
			
	
    $GET=array();
	return $output;

}