<?php

/**
 * Implementation of hook_menu()
 */
function oauth_twitter_menu()
{
  $items['confirm/twitter'] = array( 
    'title' => 'Grabbit application has been added', 
    'page callback' => 'oauth_twitter_page', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
 
  $items['application/twitter'] = array( 
    'title' => 'Grabbit application', 
    'page callback' => 'oauth_twitter_authorize', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );

  $items['application/ajustes'] = array( 
    'title' => 'Grabbit application', 
    'page callback' => 'oauth_twitter_ajuste', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );

  $items['user/%user_category/edit/twitterapp'] = array(
    'title' => 'Twitter account',
    'page callback' => 'oauth_twitter_account',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'load arguments' => array('%map', '%index'),
    'weight' => 10,
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implementation of hook_user().
 */
function oauth_twitter_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'categories':
      return array(
        array(
          'name' => 'twitterapp',
          'title' => 'Twitter account',
          'weight' => 3,
        ),
      );
  }
}

function oauth_twitter_ajuste(){
  	$mbox = @imap_open(
      "{imap.googlemail.com:993/imap/ssl}INBOX",
      'ifuyivara@gmail.com',
      'internet21',
      OP_READONLY
    );

    $messages = array();
    
	$headers = imap_search($mbox, 'SINCE 01-Jul-2009');

    if (is_array($headers)) {
      $headers = array_reverse($headers, TRUE);
    }
    foreach ($headers as $k => $v) {
      $messages[$v] = imap_headerinfo($mbox, $k+1);
    }

    foreach ($messages as $overview) {
       	    //check to see if message has been viewed yet
		       
		       echo "<p>{$overview->Msgno} ({$overview->date}) - From:
		   	  {$overview->fromaddress} {$overview->subject}<br>";
		        echo "UID: {$overview->uid}<br>";

		        $data = get_part($mbox, $overview->Msgno, "TEXT/HTML");           
		        echo "Message: $data <br>";
    
     }

	imap_close($mbox);
	
}
function get_mime_type(&$structure) {
    $primary_mime_type = array("TEXT", "MULTIPART", "MESSAGE", "APPLICATION", "AUDIO", "IMAGE", "VIDEO", "OTHER");
    if($structure->subtype) {
         return $primary_mime_type[(int) $structure->type] . '/' . $structure->subtype;
     }
     return "TEXT/PLAIN";
}

function get_part($stream, $msg_number, $mime_type, $structure = false, $part_number = false) {
    if (!$structure) {
         $structure = imap_fetchstructure($stream, $msg_number);
     }
    if($structure) {
	
        $contentParts = count($structure->parts);	
		if ($contentParts >= 2) {
			
			   for ($i=2;$i<=$contentParts;$i++) {
		   	     $file_number=imap_bodystruct($stream,$msg_number,$i);
		         if($file_number->parameters[0]->attribute!='CHARSET')
		           $att[$i-2] =$file_number; 
		   	   }
		     
		   	for ($k=0;$k<sizeof($att);$k++) {
		   		if ($att[$k]->parameters[0]->value == "us-ascii" || $att[$k]->parameters[0]->value    == "US-ASCII") {
		   			if ($att[$k]->parameters[1]->value != "") {
		   				$selectBoxDisplay[$k] = $att[$k]->parameters[1]->value;
		   			}
		   		} elseif ($att[$k]->parameters[0]->value != "iso-8859-1" &&    $att[$k]->parameters[0]->value != "ISO-8859-1") {
		   			$selectBoxDisplay[$k] = $att[$k]->parameters[0]->value;
		   		}
		   	}
		   }
		

		   if (sizeof($selectBoxDisplay) > 0) {
		   	$attachment = "<select name=\"attachments\" size=\"3\" class=\"tblContent\"    onChange=\"handleFile(this.value)\" style=\"width:170;\">";
		   	for ($j=0;$j<sizeof($selectBoxDisplay);$j++) {
		   		$attachment .= "\n<option value=\"$j\">". $selectBoxDisplay[$j]    ."</option>";
		   	}
		   	$attachment .= "</select>";
		   }
		
         if($mime_type == get_mime_type($structure)) {
              if(!$part_number) {
                   $part_number = "1";
               }
              $text = imap_fetchbody($stream, $msg_number, $part_number);
              if($structure->encoding == 3) {
                   return imap_base64($text);
               } else if ($structure->encoding == 4) {
                   return utf8_encode(imap_qprint($text));
               } else {
                   return $text;
            }
        }
         if ($structure->type == 1) { /* multipart */
              while (list($index, $sub_structure) = each($structure->parts)) {
                if ($part_number) {
                    $prefix = $part_number . '.';
                }
                $data = get_part($stream, $msg_number, $mime_type, $sub_structure, $prefix . ($index + 1));
                if ($data) {
                    return $data;
                }
            }
        }
    }
    return false;
}
function oauth_twitter_page(){
	
	include 'includes/EpiCurl.php';
	include 'includes/EpiOAuth.php';
	include 'includes/EpiTwitter.php';
	include 'includes/secret.php';
	
	global $user;
	
	$twitterObj = new EpiTwitter($consumer_key, $consumer_secret);

	$twitterObj->setToken($_GET['oauth_token']);
	$token = $twitterObj->getAccessToken();
	$config=array('token'=>$token->oauth_token,
	              'secret'=>$token->oauth_token_secret);
	
    oauth_twitter_save_config($user->uid,$config);
    $output = "You can now use Grabbit.net to manage your Twitter updates and read your twitter streams";
	return $output;
}

function oauth_twitter_account(){
	include 'includes/EpiCurl.php';
	include 'includes/EpiOAuth.php';
	include 'includes/EpiTwitter.php';
	include 'includes/secret.php';
	
    $twitterObj = new EpiTwitter($consumer_key, $consumer_secret);

    global $user;

    $twitter_account = oauth_twitter_get_uid($user->uid);

    if($twitter_account){
	  $token = unserialize($twitter_account->config);
	  $twitterObj->setToken($token['token'], $token['secret']);
	  $twitterInfo= $twitterObj->get_accountVerify_credentials();
	  $twitterInfo->response;
  	  $output = 'Your current Twitter account for grabbit is: <span class="user-twitter">'.$twitterInfo->screen_name.'</span>
                 <span class="user-pic-twitter"><img src="'.$twitterInfo->profile_image_url.'"></span>';
    }else{
      $output = '<a href="' . $twitterObj->getAuthorizationUrl() . '">Click here to install the Grabbit.net app for Twitter</a>';
    }

	return $output;
}

function oauth_twitter_save_config($user,$config){

  $savetodb = serialize($config);
  if($user>0){
	db_query("DELETE FROM {oauth_twitter} WHERE uid =%d",$user);	
	db_query("INSERT INTO {oauth_twitter} (uid,config) VALUES (%d, '%s')",$user,$savetodb);	
	$result = TRUE;

	  return $result;	
  }
	
}

function oauth_twitter_get_uid($user){

  $result = db_query("SELECT * FROM {oauth_twitter} WHERE uid = %d",$user);

  if ($user = db_fetch_object($result)) {
	$user = $user;
  }
  else{
    $user = FALSE;	
  }

  return $user;
}