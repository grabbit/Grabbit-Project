<?php

/**
 * Implementation of hook_block()
 */
function friend_search_block($op = 'list', $delta = 0, $edit = array()) {
  switch($op) {
    case 'list':
      $blocks[0]['info'] = t('Friend Search');
      $blocks[1]['info'] = t('Search Content');
      $blocks[2]['info'] = t('Status Form');
      return $blocks;
      break;
    case 'view':
      switch ( $delta )
      {
		case 0:
          $blocks['title'] = 'Are this people yor friends?';
          $blocks['content'] = drupal_get_form('friend_search_people_form');

          break;
		case 1:
          $blocks['title'] = 'Search Content';
          $blocks['content'] = drupal_get_form('search_form');
          	
          break;
		case 2:
		/*  if(module_exists('grabbit_uploads')){
			drupal_add_js(drupal_get_path('module', 'grabbit_uploads').'/uploads.js', $type = 'module');
			if(grabbit_uploads_get_uid($user->uid)){
				$blocks['content'] = '<div class="panels-update-form_file" style="display:none">
				             <div class="panels-update-wraper_file" id="files-upload-grabb">
				             <form id="yfrog-form" action="#" method="post"> 
				                
							    <input type="file" size="10" id="media" class="form-file" name="media"/>
							    <input type="submit" value="Upload" /> 
							</form>
				             </div></div>';
			}else{*/
			  	$blocks['content'] = '<div class="panels-update-form_file" style="display:none">
				             <div class="panels-update-wraper_file" id="files-upload-grabb">
				             <form id="new-twitaccount-form" action="#" method="post"> 
							  <span class="description">You need to type your twitter\'s user name and password for image-uploads</span>  
							  <input type="textfield" onClick="this.value=\'\'" value="twitter username" name="username" id="pic-username"/>
	                          <input type="password" onClick="this.value=\'\'" value="password" name="password" id="pic-password"/>
							  <input type="submit" value="Save" /> 
							</form>
				             </div></div>';	
			/*}*/
		    
		  }
          $blocks['content'] .= '<div class="panels-update-form">
		             <div class="panels-update-wraper">'.drupal_get_form('facebook_grabbit_update_form').'</div>
		           </div>';

          break;
      }
      return $blocks;
      break;
  }
}


/**
 * Implementation of hook_menu()
 */
function friend_search_menu()
{
  $items['user/search'] = array( 
    'title' => 'Find People', 
    'page callback' => 'friend_search_page', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  ); 

  $items['user/friends'] = array( 
    'title' => 'Friends', 
    'page callback' => 'friend_search_show_friends', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  return $items;
}

function friend_search_show_friends(){
	
	global $user;
	
	drupal_add_js(drupal_get_path('module', 'friend_search').'/engine.js', $type = 'module');
	
	$view = views_get_view('friends');
    $display_id = 'page_1';
    $view->set_display($display_id);	

    $output .='<div class="grabbit-list"><a href="JavaScript:void(0);" class="grabbit-friends"><h2>Grabbit Friends</h2></a><div class="grabbit-container" style="display:none">'.$view->render().'</div></div>';

	$fuser = facebook_grabbit_get_fid($user->uid);
	$profile = content_profile_load('profile', $user->uid);
	
	if ($fuser){
		
	  require_once("facebook/facebook.php");
	  require_once("facebook/facebook_desktop.php");
	  include("facebook/config.php");

	  $suser=$fuser->fid;
	  $session_key=$fuser->kid;

	  $facebook = new FacebookDesktop($api_key, $secret);
	
	  if ($facebook->set_user($suser, $session_key) != null){
		  drupal_set_message("Facebook connection failed","error");
	  }
	  else{
	     $friends =  $facebook->api_client->call_method('Friends.get', array('api_key' => $api_key,
									       'uid'=>"$suser")); 
		
		$uids = implode(", ",$friends);						
		$details = $facebook->api_client->call_method('Users.getInfo', array('api_key' => $api_key,
																       'uids'=>$uids,
																        'fields'=>'last_name, first_name, pic_small'));
																
		foreach($details as $amigo_facebook){
			$facebooks .='<div class="facebook-friend">
			               <div class="picture"><img src="'.$amigo_facebook['pic_small'].'" /></div>
			               <div class="name">'.$amigo_facebook['first_name'].' '.$amigo_facebook['last_name'].'</div>
			             </div>';
		}
									
	    $output .='<div class="facebook-list"><a href="JavaScript:void(0);" class="facebook-friends"><h2>Facebook Friends</h2></a><div class="facebook-container" style="display:none">'.$facebooks.'</div></div>';
	  }
    }

    $accounts = oauth_twitter_get_uid($user->uid);

	if($accounts){
		include_once 'includes/EpiCurl.php';
		include_once 'includes/EpiOAuth.php';
		include_once 'includes/EpiTwitter.php';
		include 'includes/secret.php';

		try{
        	$twitterObj = new EpiTwitter($consumer_key, $consumer_secret);
			$twitter_account = oauth_twitter_get_uid($user->uid);
			$token = unserialize($twitter_account->config);
			$twitterObj->setToken($token['token'], $token['secret']);
			 $twitterInfo2= $twitterObj->get_accountVerify_credentials();  
			 $twit_id = $twitterInfo2->screen_name;
			
			$requ = drupal_http_request('http://twitter.com/statuses/friends.json?screen_name='.$twit_id, $headers = array(), $method = 'GET', $data = NULL, $retry = 3);
			$unser = json_decode($requ->data);
			foreach($unser as $twitter){
				$twitters .='<div class="twitter-friend">
				               <div class="picture"><img src="'.$twitter->profile_image_url.'" /></div>
				               <div class="name">'.$twitter->name.'</div>
				             </div>';
			  
			}
	     }
	     catch(EpiOAuthBadRequestException $e){  
	        drupal_set_message("Connection error Twitter","error");
	     }catch(EpiOAuthUnauthorizedException $e){  
	        drupal_set_message("Error in Twitter","error");
	     }catch(EpiOAuthException $e){  
	        drupal_set_message("Ooops! some strange error with twitter, maybe fail wale!","error");
	     }
	
	  $output .='<div class="twitter-list"><a href="JavaScript:void(0);" class="twitter-friends"><h2>Twitter Following</h2></a><div class="twitter-container" style="display:none">'.$twitters.'</div></div>';	
	}
	
	return $output;
}

/**
 * Retrieves and displays page view
 */
function friend_search_page()
{
  $view = views_get_view('friend_search');
  
  $view->use_ajax = TRUE;
  $display_id = 'default';
  $view->set_display($display_id);
  $view->is_cacheable = FALSE;
  
  if ($_GET['username'])
  {
    $item = $view->get_item($display_id, 'filter', 'title');
    $item['value'] = $_GET['username'];
    unset($_GET['username']);
    
    $view->set_item($display_id, 'filter', 'title', $item);
  }
  
  return $view->render();
}

/**
 * Implementation of hook_form() for find people
 */
function friend_search_people_form($form_state){
	
  	$form['username'] = array(
	    '#type' => 'textfield',
	    '#size' => 60,
	    '#maxlength' => 255,
	    '#required' => true );

	$form['submit'] = array(
	    '#type' => 'submit',
	    '#value' => t('Search'),
	    '#weight'=>10
	);	
	
	$form['#action'] = url('user/search');
	
	$form['#method'] = 'get';
	
  return $form;
}

/**
 * Implementation of hook_menu_alter() to customize search
 */
function friend_search_menu_alter(&$items) {
    unset($items['search/user/%menu_tail']); // So the Tab "Users" doesnt appear in the search page
}
