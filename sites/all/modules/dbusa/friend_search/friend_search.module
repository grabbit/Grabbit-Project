<?php


/**
 * Implementation of hook_block()
 */
function friend_search_block($op = 'list', $delta = 0, $edit = array()) {
  switch($op) {
    case 'list':
      $blocks[0]['info'] = t('Friend Search');
      $blocks[1]['info'] = t('Search Content');
      $blocks[2]['info'] = t('Status Form');
      return $blocks;
      break;
    case 'view':
      switch ( $delta )
      {
		case 0:
          $blocks['title'] = 'Are this people yor friends?';
          $blocks['content'] = drupal_get_form('friend_search_people_form');

          break;
		case 1:
          $blocks['title'] = 'Search Content';
          $blocks['content'] = drupal_get_form('search_form');
          	
          break;
		case 2:
          $blocks['content'] = '<div class="panels-update-form">
		             <div class="panels-update-wraper">'.drupal_get_form('facebook_grabbit_update_form');
		
          $blocks['content'] .= '<div class="upload_button_expand"><a href="#">&raquo; Upload file</a></div>
                                 <div class="panels-update-form_file" style="display:none">
                                 <div id="swfupload-control">  
							       <p>Select an image file (jpg, png, gif) or video (mov, flv) having maximum size of 1MB</p>  
							       <input type="button" id="button" />  
							       <p id="queuestatus" ></p>  
							       <ol id="log"></ol>  
							     </div>
				               </div></div>
       		           </div>';	
		
          break;
      }
      return $blocks;
      break;
  }
}


/**
 * Implementation of hook_menu()
 */
function friend_search_menu()
{
  $items['user/search'] = array( 
    'title' => 'Find People', 
    'page callback' => 'friend_search_page', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  ); 

  $items['user/%/myfriends'] = array( 
    'title' => 'Friends', 
    'page callback' => 'friend_search_show_friends', 
 	'page arguments' => array(1),
    'load arguments' => array('%map', '%index'),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK
  );

  $items['user/%/myfriends/grabbit_friends'] = array( 
    'title' => 'Grabbit Friends', 
    'page callback' => 'friend_search_show_friends_grabbit', 
 	'page arguments' => array(1),
    'load arguments' => array('%map', '%index'),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK
  );

  $items['user/%/myfriends/facebook_friends'] = array(
   'title' => 'Facebook Friends',
   'page callback' => 'friend_search_show_friends_facebook',
   'access arguments' => array('access content'),
   	'page arguments' => array(1),
    'load arguments' => array('%map', '%index'),
   'weight' => 9,
   'type' => MENU_LOCAL_TASK,
  );

  $items['user/%/myfriends/twitter_friends'] = array(
   	'title' => 'Twitter Friends',
  	'page callback' => 'friend_search_show_friends_twitter',
	   'access arguments' => array('access content'),
	   	'page arguments' => array(1),
	    'load arguments' => array('%map', '%index'),
	   'weight' => 9,
	   'type' => MENU_LOCAL_TASK,
	  );

  $items['user/%/myfriends/viewfriends'] = array(
    'title' => 'Grabbit Friends',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'load arguments' => array('%map', '%index'),
  );
  

  return $items;
}

function friend_search_show_friends_facebook(){
	global $user;
	
	drupal_add_js(drupal_get_path('module', 'friend_search').'/engine.js', $type = 'module');

	$fuser = facebook_grabbit_get_fid($user->uid);
	$profile = content_profile_load('profile', $user->uid);
	
	if ($fuser){
		$module_name='facebook_grabbit';
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook.php");
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook_desktop.php");
	  include(drupal_get_path('module', $module_name)."/facebook/config.php");

	  $suser=$fuser->fid;
	  $session_key=$fuser->kid;
      try{
	
	    $facebook = new FacebookDesktop($api_key, $secret);
	
	    if ($facebook->set_user($suser, $session_key) != null){
		  drupal_set_message("Facebook connection failed","error");
	    }
	    else{
		 
	      $friends =  $facebook->api_client->call_method('Friends.get', array('api_key' => $api_key,
									       'uid'=>"$suser")); 
		
		  $uids = implode(", ",$friends);						
		  $details = $facebook->api_client->call_method('Users.getInfo', array('api_key' => $api_key,
																       'uids'=>$uids,
																        'fields'=>'last_name, first_name, pic_small'));
		$rowx='odd';	
		foreach($details as $amigo_facebook){
			
			if(module_exists('grabbit_invites')){
				if(!grabbit_invites_get_invited($amigo_facebook['first_name'].'_'.$amigo_facebook['last_name'])){
		          $invite=l('Invite to grabbit','grabbit/invite/facebook/'.$amigo_facebook['uid']."/".$amigo_facebook['first_name']."_".$amigo_facebook['last_name']."/", array('attributes'=>array('class'=>'thickbox'),'query'=>'KeepThis=true&TB_iframe=true&height=100&width=200'));			
				}else{
				  	$invite='Invite is pending';			
				}
			}
			
			$facebooks .='<div class="facebook-friend '.$rowx.'">
			               <div class="picture"><img src="'.$amigo_facebook['pic_small'].'" /></div>
			               <div class="name">'.$amigo_facebook['first_name'].' '.$amigo_facebook['last_name'].'</div>
			               <div class="invite">'.$invite.'</div>
			             </div>';
						if($rowx=='even'){
							$rowx='odd';
						}else{
							$rowx='even';
						}
		}
									
	    $output .='<div class="facebook-list"><h2>Facebook Friends</h2><div class="facebook-container">'.$facebooks.'</div></div>';
	  }
	}catch(FacebookRestClientException $e){
		$output .='<div class="facebook-list"><h2>Facebook Friends</h2><div class="facebook-container">You have no FB account yet</div></div>';
	}
    }

	
	return $output;

	
}

function friend_search_get_friends_facebook(){
	global $user;

	$fuser = facebook_grabbit_get_fid($user->uid);
	$profile = content_profile_load('profile', $user->uid);
	
	if ($fuser){
		$module_name='facebook_grabbit';
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook.php");
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook_desktop.php");
	  include(drupal_get_path('module', $module_name)."/facebook/config.php");

	  $suser=$fuser->fid;
	  $session_key=$fuser->kid;
      try{
	
	    $facebook = new FacebookDesktop($api_key, $secret);
	
	    if ($facebook->set_user($suser, $session_key) != null){
		  drupal_set_message("Facebook connection failed","error");
	    }
	    else{
		 
	      $friends =  $facebook->api_client->call_method('Friends.get', array('api_key' => $api_key,
									       'uid'=>"$suser")); 
		
		  $uids = implode(", ",$friends);						
		  $details = $facebook->api_client->call_method('Users.getInfo', array('api_key' => $api_key,
																       'uids'=>$uids,
																        'fields'=>'last_name, first_name, pic_small'));
	     return $details;
	   }
	  }
	  catch(FacebookRestClientException $e){
	  }
    }
	
}


function friend_search_get_friends_twitter(){
    global $user;
    $accounts = oauth_twitter_get_uid($user->uid);

	if($accounts){
		include_once 'includes/EpiCurl.php';
		include_once 'includes/EpiOAuth.php';
		include_once 'includes/EpiTwitter.php';
		include 'includes/secret.php';

		try{
        	$twitterObj = new EpiTwitter($consumer_key, $consumer_secret);
			$twitter_account = oauth_twitter_get_uid($user->uid);
			$token = unserialize($twitter_account->config);
			$twitterObj->setToken($token['token'], $token['secret']);
			 $twitterInfo2= $twitterObj->get_accountVerify_credentials();  
			 $twit_id = $twitterInfo2->screen_name;
			
			$requ = drupal_http_request('http://twitter.com/statuses/friends.json?screen_name='.$twit_id, $headers = array(), $method = 'GET', $data = NULL, $retry = 3);
			$unser = json_decode($requ->data);
			
			return $unser;
	     }
	     catch(EpiOAuthBadRequestException $e){  
	        drupal_set_message("Connection error Twitter","error");
	     }catch(EpiOAuthUnauthorizedException $e){  
	        drupal_set_message("Error in Twitter","error");
	     }catch(EpiOAuthException $e){  
	        drupal_set_message("Ooops! some strange error with twitter, maybe fail wale!","error");
	     }
	
	}
	
}

function friend_search_show_friends_twitter(){
    global $user;
    $accounts = oauth_twitter_get_uid($user->uid);

	if($accounts){
		include_once 'includes/EpiCurl.php';
		include_once 'includes/EpiOAuth.php';
		include_once 'includes/EpiTwitter.php';
		include 'includes/secret.php';

		try{
        	$twitterObj = new EpiTwitter($consumer_key, $consumer_secret);
			$twitter_account = oauth_twitter_get_uid($user->uid);
			$token = unserialize($twitter_account->config);
			$twitterObj->setToken($token['token'], $token['secret']);
			 $twitterInfo2= $twitterObj->get_accountVerify_credentials();  
			 $twit_id = $twitterInfo2->screen_name;
			
			$requ = drupal_http_request('http://twitter.com/statuses/friends.json?screen_name='.$twit_id, $headers = array(), $method = 'GET', $data = NULL, $retry = 3);
			$unser = json_decode($requ->data);
			$rowx="odd";
			foreach($unser as $twitter){
				
				if(module_exists('grabbit_invites')){
					if(!grabbit_invites_get_invited($twitter->screen_name)){
					  $invite=l('Invite to grabbit','grabbit/invite/twitter/'.$twitter->screen_name."/", array('attributes'=>array('class'=>'thickbox'),'query'=>'KeepThis=true&TB_iframe=true&height=100&width=200'));
					}else{
						$invite='Invite is pending';
					}
				}
		
				$twitters .='<div class="twitter-friend '.$rowx.'">
				               <div class="picture"><img width="48px" src="'.$twitter->profile_image_url.'" /></div>
				               <div class="name">'.$twitter->name.'</div>
				               <div class="invite">'.$invite.'</div>
				             </div>';
				
						if($rowx=='even'){
							$rowx='odd';
						}else{
							$rowx='even';
						}
			  
			}
	     }
	     catch(EpiOAuthBadRequestException $e){  
	        drupal_set_message("Connection error Twitter","error");
	     }catch(EpiOAuthUnauthorizedException $e){  
	        drupal_set_message("Error in Twitter","error");
	     }catch(EpiOAuthException $e){  
	        drupal_set_message("Ooops! some strange error with twitter, maybe fail wale!","error");
	     }
	
	  $output .='<div class="twitter-list"><h2>Twitter Following</h2><div class="twitter-container">'.$twitters.'</div></div>';	
	}
	
	return $output;
	
}

function friend_search_show_friends(){
	
	global $user;
	
	drupal_add_js(drupal_get_path('module', 'friend_search').'/engine.js', $type = 'module');

    $friends=array();

    // get grabbit friends	
	$view = views_get_view('friends');
    $view->set_display($display_id);
    $view->execute();

	foreach($view->result as $friend){
	  $friend_object = content_profile_load('profile', $friend->users_friendlist_relations_1_uid);
	  $friends[$friend->users_friendlist_relations_1_name . ' g']=$friend_object;
	}
	// end grabbit friends
	
	//get facebook friends
	$facebook=friend_search_get_friends_facebook();
	foreach ($facebook as $facebook_friend){
	  $friends[$facebook_friend['first_name'].$facebook_friend['last_name'].' f']=$facebook_friend;
	}
	//end facebook friends
	
	//get twitter friends
	$twitter=friend_search_get_friends_twitter();
	foreach ($twitter as $twitter_friend){
		$friends[$twitter_friend->screen_name ." t"]=$twitter_friend;
	}
	//endf teitter friends
	
	ksort($friends);
	
    $output ='<div class="grabbit-list"><h2>All Friends</h2><div class="grabbit-container">';
    $row='views-row-odd';
    foreach($friends as $friend){
	  $output .= friend_search_theme_a_friend($friend,$row);
	  	if($row=='views-row-odd'){
			$row='views-row-even';
		}else{
			$row='views-row-odd';
		}
    }

    $output .='</div></div>';
	
	return $output;
}

function friend_search_theme_a_friend($friend,$row){
	
	if(is_array($friend)){ //if its facebook friend
		if(module_exists('grabbit_invites')){
			$suser=grabbit_invites_check_facebook_user($friend);
			if($suser!=0){
				$link=$suser['joined'];
				$link .="<br>".$suser['friends'];
			}else{
			  	if(!$invited=grabbit_invites_get_invited($friend['first_name'].'_'.$friend['last_name'])){
		          $link=l('Invite to grabbit','grabbit/invite/facebook/'.$friend['uid']."/".$friend['first_name']."_".$friend['last_name']."/", array('attributes'=>array('class'=>'thickbox'),'query'=>'KeepThis=true&TB_iframe=true&height=100&width=200'));			
				}else{
					if($invited=1){
					  $link='Invite is pending';	
					}elseif($invited=2){
					  $link='Joined grabbit';
					}			
				}	
			}
			
		}
		$name=$friend['first_name']." ".$friend['last_name'];
		$picture = '<img src="'.$friend['pic_small'].'" />';
		$social .='<span class="from-facebook"><img src="'.base_path().path_to_theme().'/images/various/facebook_ico_sml.gif" alt="Facebook Account" /></span>';
	  }
	  elseif($friend->screen_name){ //if its twitter friend
		$name=$friend->screen_name;
		$picture='<img width="48px" src="'.$friend->profile_image_url.'" />';
		if(module_exists('grabbit_invites')){
			
			if(!$invited=grabbit_invites_get_invited($friend->screen_name)){
			  $link=l('Invite to grabbit','grabbit/invite/twitter/'.$friend->screen_name."/", array('attributes'=>array('class'=>'thickbox'),'query'=>'KeepThis=true&TB_iframe=true&height=100&width=200'));
			}else{
				if($invited=1){
				  $link='Invite is pending';	
				}elseif($invited=2){
				  $link='Joined grabbit';
				}
			}
		}
		$social='<span class="from-twitter"> <img src="'.base_path().path_to_theme().'/images/various/twitter_ico_sml.gif" alt="Twitter Account" /></span>';
	  }
	  elseif($friend->nid){ //if its grabbit friend
	    $picture=l(theme('imagecache', 'friend_thumbnail', $friend->field_profile_picture[0]['filepath'], $friend->name),'users/'.$friend->name,array('html'=>TRUE));
		$name=l($friend->name,'users/'.$friend->name);
		$link='<div class="friendlist-user-links">'. l('Remove from friends', '/grabbit/friendlist/delete/'.$friend->uid.'/'.$user->uid,array('query'=>'destination=user/me/myfriends/grabbit_friends')) .'</div>';
		$social='Grabbit';	
	  }
	
	
	$output = '<div class="views-row views-row-1 '.$row.'">
	    <div class="views-row">

	  <div class="views-field-field-profile-picture-fid">
	    <span class="field-content">'.$picture.'</span>
	  </div>

	  <span class="views-field-name">
	    <span class="field-content">'.$name.'</span>
	  </span>

	  <div class="views-field-last-update-time">
	    <span class="field-content"/>
	  </div>

	  <div class="views-field-action-link-requestee">
	    <span class="field-content">'.$link.'</span>
	  </div>

	  <div class="views-field-action-socital-networks">
	    <span class="field-content">'.$social.'</span>
	  </div>
	</div>  </div>';
	
	return $output;
}

function friend_search_show_friends_grabbit(){
	
	global $user;
	
	drupal_add_js(drupal_get_path('module', 'friend_search').'/engine.js', $type = 'module');
	
	$view = views_get_view('friends');
    $display_id = 'page_1';
    $view->set_display($display_id);	

    $output ='<div class="grabbit-list"><h2>Grabbit Friends</h2><div class="grabbit-container">'.$view->render().'</div></div>';

	
	return $output;
}

/**
 * Retrieves and displays page view
 */
function friend_search_page()
{
  $view = views_get_view('friend_search');
  
  $view->use_ajax = TRUE;
  $display_id = 'default';
  $view->set_display($display_id);
  $view->is_cacheable = FALSE;
  
  if ($_GET['username'])
  {
    $item = $view->get_item($display_id, 'filter', 'title');
    $item['value'] = $_GET['username'];
    unset($_GET['username']);
    
    $view->set_item($display_id, 'filter', 'title', $item);
  }
  
  return $view->render();
}

/**
 * Implementation of hook_form() for find people
 */
function friend_search_people_form($form_state){
	
  	$form['username'] = array(
	    '#type' => 'textfield',
	    '#size' => 60,
	    '#maxlength' => 255,
	    '#required' => true );

	$form['submit'] = array(
	    '#type' => 'submit',
	    '#value' => t('Search'),
	    '#weight'=>10
	);	
	
	$form['#action'] = url('user/search');
	
	$form['#method'] = 'get';
	
  return $form;
}

/**
 * Implementation of hook_menu_alter() to customize search
 */
function friend_search_menu_alter(&$items) {
    unset($items['search/user/%menu_tail']); // So the Tab "Users" doesnt appear in the search page
}
