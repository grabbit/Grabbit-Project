<?

/**
 * Implementation of hook_menu()
 */
function grabbit_me_menu() {

  $items['me/activity'] = array( 
    'page callback' => 'grabbit_me_show_activity', 
    'access arguments' => array('access content')
  );

  $items['activity/updates'] = array(
   'title' => 'Updates',
   'description' => t('Watch your activity.'),
   'page callback' => 'grabbit_me_show_activity_rendered_all',
   'access arguments' => array('access content'),
  );

  $items['activity/updates/all'] = array(
   'title' => 'All',
   'weight' => 1,
   'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['activity/updates/status'] = array(
   'title' => 'Status updates',
   'description' => t('Watch your activity.'),
   'page callback' => 'grabbit_me_show_activity_rendered',
   'access arguments' => array('access content'),
   'weight' => 2,
   'type' => MENU_LOCAL_TASK,
  );

  $items['activity/updates/mentions'] = array(
   'title' => 'Mentions',
   'description' => t('Watch your activity.'),
   'page callback' => 'grabbit_me_show_activity_mentions',
   'access arguments' => array('access content'),
   'weight' => 3,
   'type' => MENU_LOCAL_TASK,
  );

  $items['activity/updates/comments'] = array(
   'title' => 'Comments',
   'description' => t('Watch your activity.'),
   'page callback' => 'grabbit_me_show_activity_comments',
   'access arguments' => array('access content'),
   'weight' => 4,
   'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

function grabbit_me_show_activity(){
	global $user;
	$profile = content_profile_load('profile', $user->uid);
	print_r($profile);
	print_r($user);
	
}

function grabbit_me_theme_my_activity($nod,$item,$profile){
	
	if($item['facebook'])
	  $social_networks .='<span class="from-facebook"><img src="'.base_path().path_to_theme().'/images/various/facebook_ico_sml.gif" alt="Facebook Account" /></span>';

	if($item['twitter'])
	  $social_networks .='<span class="from-twitter"> <img src="'.base_path().path_to_theme().'/images/various/twitter_ico_sml.gif" alt="Twitter Account" /></span>';
	
	$return = '<div class="twitter-message-stream clearfix '.$nod.'" style="display: block;">
	  <div class="listable">
	    <span class="twitter-image" style="background:none;">'.theme('imagecache', 'friend_thumbnail', $profile->field_profile_picture[0]['filepath'], 'My Image').'
	    '.$social_networks.'</span>
	  </div>
	  <a target="_blank" class="twitter-name-link" href="#">'.$profile->title.'</a>
	  <div class="twitter-body">
	    <div class="twitter-body-contains">'.$item['status'].'</div> 
	    <span class="twitter-date">'.format_date($item['time']).'</span>
	  </div>
	</div>';
	
	return $return;
}

function grabbit_me_theme_feeds($nod,$item){
	
	
	$return = '<div class="twitter-message-stream clearfix '.$nod.'" style="display: block;">
	  <div class="listable">
	    <span class="twitter-image" style="background:none;">'.theme('imagecache', 'friend_thumbnail', 'sites/default/files/imagefield_default_images/blue-rss-button.png', 'RSS').'
	    </span>
	  </div>
	  <a target="_blank" class="twitter-name-link" href="#">'.$item->title.'</a>
	  <div class="twitter-body">
	    <div class="twitter-body-contains">'.$item->body.'</div> 
	    <span class="twitter-date">added on '.format_date($item->created).'</span>
	  </div>
	</div>';
	
	return $return;
}

function grabbit_me_theme_my_activity_comments($rowx,$item){
	
	$node=node_load($item['nid'],NULL,TRUE);
	
	$node->rowx=$rowx;
	switch($node->type){
		case 'facebook':
		    $actor=array('name'=>$node->field_user_name[0]['value'],
			             'url'=>$node->field_user_url[0]['value'],
			             'pic_square'=>$node->field_user_picture[0]['value']
			             );
			$commenta=array();
			$actors=array();
			if($node->field_comments[0]['value']){
				$profiles=unserialize($node->field_comments[0]['value']);
				$commenta=$profiles['comments'];	
				$actors=$profiles['profiles'];
			}
			
			if(!$node->field_attachment[0]['value']){ //STATUS UPDATE
				$target='';
				if($node->field_target[0]['value'])
				  $target=$node->field_target[0]['value'];
                     
				$output .= prepeare_status_update($node,$actor,$target,$actors,$commenta);
				$comments=array();
				}else{
					$target='';
					if($node->field_target[0]['value'])
					  $target=$node->field_target[0]['value'];

					$output .= prepeare_standar_update($node,$actor,$target,$actors,$commenta);
					$comments=array();
				}
		
		break;
		case 'twitter':
		  $output .=theme_twitter_message($node);
		break;
		case 'gmail':
		  $comments = db_query("SELECT * FROM {comments} WHERE nid = %d ORDER BY timestamp ASC", $node->nid);
		  $output .= theme_gmail_message($comments,$node);
		break;
		case 'imap':
		  $comments = db_query("SELECT * FROM {comments} WHERE nid = %d ORDER BY timestamp ASC", $node->nid);
		  $output .= theme_imap_message($comments,$node);
		break;
		default:
		  $comments = db_query("SELECT * FROM {comments} WHERE nid = %d ORDER BY timestamp ASC", $node->nid);
		  $output .= _news_theme($comments,$node);
		break;
	}
	
	return $output;
}


//Implementation of hook_grabbit_status_update
//$status the text of the status
function grabbit_me_grabbit_status_update($status, $tw_status_ch, $fb_status_ch,$uid,$media){

  $extra_array=array();
  $extra_array['twitter']=$tw_status_ch;
  $extra_array['facebook']=$fb_status_ch;
  $extra_array['time']=time();
  $extra_array['status']=$status;

  $extra=serialize($extra_array);

  db_query("INSERT INTO {grabbit_me} (uid,type,extra,number) VALUES (%d,'status','%s',%d)",$uid,$extra,$extra_array['time']);

  if($media){
		$node = node_load($media); 
		$node->body=$status;
		$node->status=1;
		$node->uid=$uid;
		$node->comment=1;
		node_save($node);
  }
	
}

//Implementation of hook_grabbit_facebook_comment
function grabbit_me_grabbit_facebook_comment($nid,$uid,$comment){
	
  $extra_array=array();
  $extra_array['nid']=$nid;
  $extra_array['type']='facebook';
  $extra_array['time']=time();
  $extra_array['comment']=$comment;

  $extra=serialize($extra_array);

  db_query("INSERT INTO {grabbit_me} (uid,type,extra,number) VALUES (%d,'comment','%s',%d)",$uid,$extra,$extra_array['time']);

}

//Implementation of hook_grabbit_nodes_comment
function grabbit_me_grabbit_nodes_comment($nid,$comment,$uid){
	$extra_array=array();
	  $extra_array['nid']=$nid;
	  $extra_array['type']='node';
	  $extra_array['time']=time();
	  $extra_array['comment']=$comment;

	  $extra=serialize($extra_array);

	  db_query("INSERT INTO {grabbit_me} (uid,type,extra,number) VALUES (%d,'comment','%s',%d)",$uid,$extra,$extra_array['time']);
	
}

function grabbit_me_get_statuses($uid,$limit=10){
	
  $result = db_query("SELECT * FROM {grabbit_me} WHERE uid=%d AND type='status' ORDER BY number DESC LIMIT %d",$uid,$limit);

  $array=array();
  while ($status = db_fetch_object($result)){
	$data=unserialize($status->extra);
    $array[]=$status;
  }

  return $array;
	
}

function grabbit_me_get_statuses_all($uid,$limit=10){

  $super_array=array();

  $result = db_query("SELECT * FROM {grabbit_me} WHERE uid=%d AND type='status' ORDER BY number DESC LIMIT %d",$uid,$limit);

  while ($status = db_fetch_object($result)){
	$super_array[$status->number]=$status;
	$super_array[$status->number]->type='status';
  }

  $result = db_query("SELECT * FROM {friendlist_statuses} WHERE requester_id=%d AND status='TW_BOTH' ORDER BY last_update_time DESC LIMIT %d",$uid,$limit);
  
  while ($status = db_fetch_object($result)){
	$super_array[$status->last_update_time]=$status;
	$super_array[$status->last_update_time]->type='friend';
  }

  $result = db_query("SELECT * FROM {grabbit_me} WHERE uid=%d AND type='comment' ORDER BY number DESC LIMIT %d",$uid,$limit);

  while ($status = db_fetch_object($result)){
	$super_array[$status->number]=$status;
	$super_array[$status->number]->type='comment';
  }

  $result = db_query("SELECT * FROM {node} WHERE uid=%d AND type='feed' ORDER BY created DESC LIMIT %d",$uid,$limit);

  while ($status = db_fetch_object($result)){
	$super_array[$status->created]=$status;
  }
  ksort($super_array);
  $reverse = array_reverse($super_array);
  $total = array_slice($super_array,0,20);

  $nod='even display';

  $profile = content_profile_load('profile', $uid);

  foreach($total as $element){

    switch($element->type){
	  case 'comment':
		  $item=unserialize($element->extra);
	      $output .= grabbit_me_theme_my_activity_comments($nod,$item);
	  break;
	  case 'status':
	      $item=unserialize($element->extra);
	      $output .= grabbit_me_theme_my_activity($nod,$item,$profile);
	  break;
	  case 'feed':
	    $node=node_load($element->nid);
	    $output .= grabbit_me_theme_feeds($nod,$node);
	  break;
	  case 'friend':
	  break;
    }

  	 if($nod=='odd display'){
	    $nod='even display';
      }else{
	    $nod='odd display';
      }
	
  }

  return $output;

}


function grabbit_me_get_comments($uid,$limit=10){
	
  $result = db_query("SELECT extra FROM {grabbit_me} WHERE uid=%d AND type='comment' ORDER BY number DESC LIMIT %d",$uid,$limit);

  $array=array();
  while ($status = db_fetch_object($result)){
	
	$data=unserialize($status->extra);
	if($data['time'])
      $array[]=$status;
  }

  return $array;
	
}


function grabbit_me_get_mentions($uid,$user_name,$limit=10){

  if($fuser = facebook_grabbit_get_fid($uid)){
	  $first_facebook=grabbit_me_get_cache_data($uid,'facebook');
	  if(!$first_facebook || $first_facebook=='NONE'){
	      $module_name='facebook_grabbit';
		  require_once(drupal_get_path('module', $module_name)."/facebook/facebook.php");
		  require_once(drupal_get_path('module', $module_name)."/facebook/facebook_desktop.php");
		  include(drupal_get_path('module', $module_name)."/facebook/config.php");

		  $suser=$fuser->fid;
		  $session_key=$fuser->kid;
	      try{

		    $facebook = new FacebookDesktop($api_key, $secret);

		    if ($facebook->set_user($suser, $session_key)!= null){
			  drupal_set_message("Facebook connection failed","error");
			  $facebook_name='NULL';
		    }
		    else{
			  $user_details = $facebook->api_client->users_getInfo($suser, 'username');

			  $facebook_name=$user_details[0]['username']; 
			}

		  }catch(FacebookRestClientException $e){

		  }
		
	    grabbit_me_save_cache_data($uid,'facebook',$facebook_name);	  
	  }
  }
	
  if($twitter_account = oauth_twitter_get_uid($uid)){
	$first_twitter=grabbit_me_get_cache_data($uid,'twitter');
	  if(!$first_twitter || $first_twitter=='NONE'){
	    $secret=unserialize($twitter_account->config);
	    $user_id=substr($secret['token'], 0, strpos($secret['token'], "-"));    
		$response = drupal_http_request('http://twitter.com/users/show/'.$user_id.'.json');
		$user_twitter=json_decode($response->data);
	    $twitter_name=$user_twitter->screen_name;
	    grabbit_me_save_cache_data($uid,'twitter',$twitter_name);
	  }
  }

  $result = db_query("SELECT * FROM {grabbit_me} WHERE type='status' AND (extra LIKE '%".$user_name."%' 
                                                                      OR extra LIKE '%".$first_facebook."%' 
                                                                      OR extra LIKE '%".$first_twitter."%') ORDER BY number DESC LIMIT %d",$limit);


  $array=array();
  while ($status = db_fetch_object($result)){
    $data=unserialize($status->extra);
    $array[]=$status;
  }

  return $array;

}

function grabbit_me_save_cache_data($uid,$type,$name='NULL'){
	if($name!='NULL'){
	  variable_set('me_user_'.$uid.'_'.$type, $name);
	}
}

function grabbit_me_get_cache_data($uid,$type){
	$variable = variable_get('me_user_'.$uid.'_'.$type, 'NONE');
	return $variable;
}

function grabbit_me_show_activity_comments(){
	global $user;
	
	// get comments
	$comm = grabbit_me_get_comments($user->uid,$limit=10);
	if (!count($comm)){
	  $comments = '<div class="messages-status-updates">You have no comments in grabbit yet</div>';
	}else{
	    $nod='even display';
	  	foreach($comm as $comment){
		  $item=unserialize($comment->extra);
	      $comments .= grabbit_me_theme_my_activity_comments($nod,$item);
	      if($nod=='odd display'){
		    $nod='even display';
	      }else{
		    $nod='odd display';
	      }
	    } 
	}
	// end comments
	
			$output .='<div class="panels-controllers">
			           <div id="panels-pager" class="panels-pager"></div>
			           <a href="JavaScript:void(0);" class="move-left"></a>
			           <a href="JavaScript:void(0);" class="move-right"></a>
			           </div><div class="panel-grabbit suser-panels">
			           <div class="panel-grabbit user-panel" id="panel-activity">
			            <div class="panel-title clearfix">
						  <div class="controller-top"> 
						    <h3 class="title">Comments</h3>
						  </div>
						</div>';
			$output .=$comments;

			
			$output .='</div>';

   return $output;
	
}

function grabbit_me_show_activity_mentions(){
     global $user;

		// get mentions
		$ment = grabbit_me_get_mentions($user->uid,$user->name);
		if (!count($ment)){
		  $mentions = '<div class="messages-status-updates">You have no mentions in grabbit yet</div>';
		}else{
		    $nod='even';
		  	foreach($ment as $m_status){
			  $item=unserialize($m_status->extra);

		      $mentions .= grabbit_me_theme_my_activity($nod,$item,$profile);
		      if($nod=='odd'){
			    $nod='even';
		      }else{
			    $nod='odd';
		      }
		    } 
		}
		// end mentions

			$output .='<div class="panels-controllers">
			           <div id="panels-pager" class="panels-pager"></div>
			           <a href="JavaScript:void(0);" class="move-left"></a>
			           <a href="JavaScript:void(0);" class="move-right"></a>
			           </div><div class="panel-grabbit suser-panels">
			           <div class="panel-grabbit user-panel" id="panel-activity">
			            <div class="panel-title clearfix">
						  <div class="controller-top"> 
						    <h3 class="title">Mentions</h3>
						  </div>
						</div>';
			$output .=$mentions;

			
			$output .='</div>';

   return $output;
	
}

function grabbit_me_show_activity_rendered(){
	global $user;
	
	
    // get statuses
    $statuses = grabbit_me_get_statuses($user->uid);
    $profile = content_profile_load('profile', $user->uid);
    $nod='even';
    if(!count($statuses)){
	  $updates = '<div class="messages-status-updates">You have no status updates in grabbit yet</div>';
    }else{
	  	foreach($statuses as $status){
		  $item=unserialize($status->extra);
	      $updates .= grabbit_me_theme_my_activity($nod,$item,$profile);
	      if($nod=='odd'){
		    $nod='even';
	      }else{
		    $nod='odd';
	      }
	    }
	
    } 
    // end statuses

    
			$output .='<div class="panels-controllers">
			           <div id="panels-pager" class="panels-pager"></div>
			           <a href="JavaScript:void(0);" class="move-left"></a>
			           <a href="JavaScript:void(0);" class="move-right"></a>
			           </div><div class="panel-grabbit suser-panels">
			           <div class="panel-grabbit user-panel" id="panel-activity">
			            <div class="panel-title clearfix">
						  <div class="controller-top"> 
						    <h3 class="title">Last Updates</h3>
						  </div>
						</div>';
			$output .=$updates;

			
			$output .='</div>';
	

  return $output;	
}

function grabbit_me_show_activity_rendered_all(){
	global $user;
	
	
    // get statuses
    $statuses = grabbit_me_get_statuses_all($user->uid);
    $profile = content_profile_load('profile', $user->uid);
    $nod='even';
    if(!count($statuses)){
	  $updates = '<div class="messages-status-updates">You have no status updates in grabbit yet</div>';
    }else{
	  	foreach($statuses as $status){
		  $item=unserialize($status->extra);
	      $updates .= grabbit_me_theme_my_activity($nod,$item,$profile);
	      if($nod=='odd'){
		    $nod='even';
	      }else{
		    $nod='odd';
	      }
	    }
	
    } 
    // end statuses

    
			$output .='<div class="panels-controllers">
			           <div id="panels-pager" class="panels-pager"></div>
			           <a href="JavaScript:void(0);" class="move-left"></a>
			           <a href="JavaScript:void(0);" class="move-right"></a>
			           </div><div class="panel-grabbit suser-panels">
			           <div class="panel-grabbit user-panel" id="panel-activity">
			            <div class="panel-title clearfix">
						  <div class="controller-top"> 
						    <h3 class="title">Last Updates</h3>
						  </div>
						</div>';
			$output .=$updates;

			
			$output .='</div>';
	

  return $output;	
}

//to get all your friends--> grabbit_me_db_statuses('count', $user->uid, NULL, 1, 'TW_BOTH')

function grabbit_me_db_statuses($op, $requester, $requestee, $rtid, $status) {

  $requester = friendlist_api_user_into_uid($requester);
  $requestee = friendlist_api_user_into_uid($requestee);

  if ($requester !== NULL) {
    $cond  .= ' AND fs.requester_id = %d ';
    $parm[] = $requester;
  }

  if ($requestee !== NULL) {
    $cond  .= ' AND fs.requestee_id = %d ';
    $parm[] = $requestee;
  }

  if ($rtid !== NULL) {
    $cond  .= ' AND fs.rtid = %d ';
    $parm[] = $rtid;
  }

  if ($status != NULL) {

    if (is_array($status)) {

      // Turn the conditions into a query.
      foreach ($status as $status_value) {
        $cond_status[] = "fs.status LIKE '%s'";
        $parm[] = $status_value;
      }
      $cond .= 'AND ('. implode(' OR ', $cond_status) .')' ;

    }
    else {
      $cond  .= " AND fs.status LIKE '%s' ";
      $parm[] = $status;
    }
  }

  if ($op == 'count') {
    $query = "SELECT COUNT(*) FROM {friendlist_statuses} fs JOIN {users} u WHERE u.uid=fs.requestee_id AND u.status = 1 AND 1 = 1 $cond";
    return db_result(db_query($query, $parm));
  }
  else {
    $query = "SELECT * FROM {friendlist_statuses} fs WHERE 1 = 1 $cond";
    return db_query($query, $parm);
  }
}


/**
 * Implementation of hook_block()
 */
function grabbit_me_block($op = 'list', $delta = 0, $edit = array()) {
  switch($op) {
    case 'list':
      $blocks[0]['info'] = t('My Profile');
      $blocks[1]['info'] = t('My Tags');
      $blocks[2]['info'] = t('My Account');
      return $blocks;
      break;
    case 'view':
      switch ( $delta )
      {
		case 0:
          $blocks['title'] = t('My Profile');
          $blocks['content'] = grabbit_me_get_my_profile();

          break;
		case 1:
          $blocks['title'] = t('My Tags');
          $blocks['content'] = grabbit_me_get_my_tags();
          	
          break;
		case 2:
		  $blocks['title']=t('My Account');
          $blocks['content'] = grabbit_me_get_my_account();	
		
          break;
      }
      return $blocks;
      break;
  }
}

function grabbit_me_get_my_profile(){
	global $user;
	
	$profile = content_profile_load('profile', $user->uid);
	
	foreach($profile->field_profile_websites as $website){
		$webs = $website['value'].'<br>';
	}
	
	$output = '<div class="edit-panel"><a href="#">Edit</a></div><div class="user-profile-block">
	<div class="main-info clear-block">
	  <div class="image">'.theme('imagecache', 'me_image', $profile->field_profile_picture[0]['filepath'], 'My Image').'</div>
	  <div class="user-name">'.$user->name.'</div>
	  <div class="friends">Friends: <span class="blue">'.grabbit_me_db_statuses('count', $user->uid, NULL, 1, 'TW_BOTH').'</span></div>
	  <div class="post">Posts: <span class="blue">'.grabbit_statistics_post_get_total($user->uid,'all').'</span></div>
	</div>
	
	<div class="other-info">
	  <div class="bio">'.$profile->field_profile_about[0]['value'].'</div>
	  <div class="adress">'.$profile->field_profile_city[0]['value'].', '.$profile->field_profile_state[0]['value'].'<br>
	                      '.$profile->field_profile_country[0]['value'].'</div>
	  <div class="websites">'.$webs.'</div>
	</div>
	</div>';
	
	return $output;
	
}

function grabbit_me_get_my_tags(){
	global $user;
	
	$profile = content_profile_load('profile', $user->uid);
	
	foreach($profile->field_profile_hobbies as $hobbie){
		$hobbies[]=$profile->taxonomy[$hobbie['value']]->name;
		unset($profile->taxonomy[$hobbie['value']]);
	}
	foreach($profile->field_profile_topics as $topic){
		$topics[]=$profile->taxonomy[$topic['value']]->name;
		unset($profile->taxonomy[$topic['value']]);
	}
	foreach($profile->field_profile_interests as $interest){
		$interests[]=$profile->taxonomy[$interest['value']]->name;
		unset($profile->taxonomy[$interest['value']]);
	}
	foreach($profile->taxonomy as $feed){
		$feeds[]=$feed->name;
	}
	
	$output = '<div class="edit-panel"><a href="#">Edit</a></div>
	<div class="user-tags-block">
	  
	  <div class="feeds-keywords selected"><h3>Feeds keywords: </h3>'.implode(', ',$feeds).'</div>
	  <div class="hobbies"><h3>Hobbies: </h3>'.implode(', ',$hobbies).'</div>
	  <div class="topics"><h3>Topics: </h3>'.implode(', ',$topics).'</div>
	  <div class="interests"><h3>Interests: </h3>'.implode(', ',$interests).'</div>
	
	</div>';
	
	return $output;
	
}

function grabbit_me_get_my_account(){
	global $user;
	
	$output = '<div class="edit-panel"><a href="#">Edit</a></div>
	<div class="user-tags-block">
	  
	  <div class="email"><h3>Email: </h3>'.$user->mail.'</div>
	  <div class="pass"><h3>Pass: </h3> ******</div>
	  <div class="name"><h3>Name: </h3>'.$user->name.'</div>
	  <div class="timezone"><h3>Timezone: </h3>'.$user->timezone.'</div>
	
	</div>';
	
	return $output;
}