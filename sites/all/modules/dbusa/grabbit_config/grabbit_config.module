<?
//$Id$
 // Number of feeds to process for each step in cron.
define('GRABBIT_CRON_FEEDS', 500);
// Default time that should elapse before a feed can be refreshed again on cron.
define('GRABBIT_CRON_DEFAULT_REFRESH_TIME', 1800);

function grabbit_config_save_config($user,$config){
  $check = grabbit_config_get_uid($user);

  $savetodb = serialize($config);

  if(!$check){
    db_query("INSERT INTO {grabbit_config} (uid,config) VALUES (%d, '%s')",$user,$savetodb);	
    $result = TRUE;
  }
  else{
    db_query("UPDATE {grabbit_config} SET config='%s' WHERE uid=%d",$savetodb,$user);	
    $result = TRUE;
  }

  return $result;
	
}

function grabbit_config_get_uid($user){
	
  $result = db_query("SELECT * FROM {grabbit_config} WHERE uid = %d",$user);

  if ($user = db_fetch_object($result)) {
	$user = $user;
  }
  else{
    $user = FALSE;	
  }

  return $user;
}

/**
 * Implementation of hook_cron().
 */
function grabbit_config_cron() {
  global $user;
print_r(grabbit_config_cron_time());
}

/**
 * Check for time limits in cron processing.
 *
 * @return
 *   Number of seconds left, zero if none.
 */
function grabbit_config_cron_time() {
  static $time_limit;

  if (!$time_limit) {
    $time_limit = time() + (15 / 100) * ini_get('max_execution_time');
    // However, check for left time, maybe some other cron processing already occured
    
    timer_start('grabbit_config_cron');
  }
  return max($time_limit - time(), 0);
}