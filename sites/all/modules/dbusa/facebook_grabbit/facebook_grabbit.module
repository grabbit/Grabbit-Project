<?
//$Id$
 
/**
 * Implementation of hook_menu()
 */
function facebook_grabbit_menu () {
  $items['app/facebook'] = array( 
    'title' => 'Grabbit.net Facebook', 
    'page callback' => 'facebook_grabbit_facebook', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  ); 

  $items['facebook/status'] = array( 
    'title' => 'Update Facebook Status', 
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('facebook_grabbit_update_form'),
    'access arguments' => array('access content')
  );
  $items['facebook/stream'] = array( 
    'title' => 'View my Facebook Stream', 
    'page callback' => 'facebook_grabbit_stream', 
    'access arguments' => array('access content')
  );
  
  return $items;
}

/**
 * Implementation of hook_form()
 */

function facebook_grabbit_update_form($form_state){

	require_once("facebook/facebook.php");
	require_once("facebook/facebook_desktop.php");
	include("facebook/config.php");
	
	global $user;
	$fuser = facebook_grabbit_get_fid($user->uid);
	
	if ($fuser){
		
		$suser=$fuser->fid;
		$session_key=$fuser->kid;

		$facebook = new FacebookDesktop($api_key, $secret);
		$facebook->set_user($suser, $session_key);

		$status = $facebook->api_client->call_method("facebook.status.get", array('uid'=>$suser, 'limit'=>'5'));

		$form['cstatus'] = array(
		  '#type' => 'item',
		  '#title' => t('Current Facebook Status'),
		  '#value' => $status[0]['message'],
		);

		$form['status'] = array(
		    '#type' => 'textfield',
		    '#title' => t('New Status'),
		    '#size' => 60,
		    '#maxlength' => 255,
		    '#required' => true );

		$form['submit'] = array(
		    '#type' => 'submit',
		    '#value' => t('Update Status'),
		);	
	}
	else{
		$form['facebook'] = array(
		  '#type' => 'item',
		  '#title' => t('Allow Grabbit to update your Facebook Status'),
		  '#value' => l('<img src="'.base_path().drupal_get_path('module', 'facebook_grabbit').'/facebook/connect.gif">','http://apps.facebook.com/onixmedia/?duid='.$user->uid,array('html'=>TRUE,'attributes'=>array('target'=>'blank'))),
		);
	}
	
	return $form;
	
}

function facebook_grabbit_update_form_submit ($form, &$form_state) {
	
	require_once("facebook/facebook.php");
	require_once("facebook/facebook_desktop.php");
	include("facebook/config.php");
	
	global $user;
	$fuser = facebook_grabbit_get_fid($user->uid);
	
	$suser=$fuser->fid;
	$session_key=$fuser->kid;
	
	$facebook = new FacebookDesktop($api_key, $secret);
	$facebook->set_user($suser, $session_key);
	
	$facebook->api_client->call_method('facebook.users.setStatus', array('api_key' => $api_key,
	                                                                     'uid'=>"$suser",
	                                                                     'status'=>$form_state['values']['status']));
	
	drupal_set_message('You have changed your facebook status');
}

function facebook_grabbit_stream(){

	require_once("facebook/facebook.php");
	require_once("facebook/facebook_desktop.php");
	include("facebook/config.php");
	
	global $user;
	$fuser = facebook_grabbit_get_fid($user->uid);
	
	if ($fuser){
		
		$suser=$fuser->fid;
		$session_key=$fuser->kid;

		$facebook = new FacebookDesktop($api_key, $secret);
		$facebook->set_user($suser, $session_key);

		$ini = 'app_id='.$api_key.'session_key='.$session_key.'source_id='.$suser;
		$sig = md5($ini);
		$var = drupal_http_request('http://www.facebook.com/activitystreams/feed.php?source_id='.$suser.'&app_id='.$api_key.'&session_key='.$session_key.'&sig='.$sig.'&v=0.7&read');
		print_r('http://www.facebook.com/activitystreams/feed.php?source_id='.$suser.'&app_id='.$api_key.'&session_key='.$session_key.'&sig='.$sig.'&v=0.7&read');
	}
	else{
		return "You have no facebook account yet";
	}

	
}


/**
 * Facebook aplication using facebook API()
 */

	
function facebook_grabbit_facebook(){

  // the facebook client library
  include_once 'facebook/facebook.php';

  include_once("facebook/config.php");  

  $facebook = new Facebook($api_key, $secret);
  $facebook->require_frame();
  $user = $facebook->require_login();

  $duid=$_GET["duid"];

  if (!$facebook->api_client->users_hasAppPermission("status_update")  || !$facebook->api_client->users_hasAppPermission("offline_access")){  
    $output .= '<fb:prompt-permission perms="status_update, offline_access" next_fbjs="after(\'http://apps.facebook.com/onixmedia/?duid='.$duid.'\')"><strong>Let Grabbit.net update your status!</strong></fb:prompt-permission>';  
    $visibility = "none";  
  }else{
    $visibility = "block";
  
	if(!$_GET["duid"]){
	    $output = "There was a problem accessing your Grabbit account, please go back to grabbit.net and try again";	
	}else{
	  	$sessionkey = $_REQUEST['fb_sig_session_key'];
	print_r($sessionkey);
	    $fid=$facebook->api_client->user;
	    facebook_grabbit_save_fid($_GET["duid"],$fid,$sessionkey);
	}
    
  }  

  $output .='<div id="statusdiv" style="display:'.$visibility.';">  
	   <strong>Thank you for installing this app, go to Grabbit to change your facebook status</strong>
	</div>  
	<script>
	function after(url){
	  document.setLocation(url);
	}
	</script>';

  print $output;
}

/**
 * Save the facebook ID and Key on the facebook app()
 */
function facebook_grabbit_save_fid($user,$fid,$kid){

  $check = facebook_grabbit_get_fid($user);

  if(!$check){
    db_query("INSERT INTO {facebook_grabbit} (uid, kid, fid) VALUES (%d, '%s', %d)",$user,$kid,$fid);	
    $result = TRUE;
  }
  else{
    db_query("UPDATE {facebook_grabbit} SET kid='%s', fid=%d WHERE uid=%d",$kid,$fid,$user);	
    $result = TRUE;
  }

  return $result;

}

/**
 * Get the facebook ID and Key from any user()
 */
function facebook_grabbit_get_fid($user){
	
  $result = db_query("SELECT * FROM {facebook_grabbit} WHERE uid = %d",$user);

  if ($user = db_fetch_object($result)) {
	$user = $user;
  }
  else{
    $user = FALSE;	
  }

  return $user;
}
/*
/**
 * Implementation of hook_form_alter
 
function facebook_grabbit_form_alter(&$form, $form_state, $form_id) {

  if ('profile_node_form' == $form_id) {
	
	$form['services'] = array(
	  '#type' => 'fieldset',
	  '#title' => t('Social Networks'),
	  '#weight' => 10,
	  '#collapsible' => FALSE,
	  '#collapsed' => FALSE,
	);
	
	global $user;
	if(!facebook_grabbit_get_fid($user->uid)){
		$form['services']['facebook'] = array(
		  '#type' => 'item',
		  '#weight' => 10,
		  '#title' => t('Allow Grabbit to update your Facebook Status'),
		  '#value' => l('<img src="'.base_path().drupal_get_path('module', 'facebook_grabbit').'/facebook/connect.gif">','http://apps.facebook.com/onixmedia/?duid='.$user->uid,array('html'=>TRUE,'attributes'=>array('target'=>'blank'))),
		);	
	}
	module_load_include('inc', 'twitter');
	$twitter = array_shift(twitter_get_user_accounts($form['uid']['#value']));
	
	  $form['services']['screen_name'] = array(
	    '#type' => 'textfield',
	    '#required' => FALSE,
	    '#title' => t('Twitter user name'),
	    '#value'=>$twitter['screen_name']
	  );
	  $form['services']['password'] = array(
	    '#type' => 'password',
	    '#title' => t('Password'),
	    '#value'=>$twitter['password'],
	    '#description' => t("If your Twitter account is protected, or you wish to post to Twitter from Grabbit, you must enter the Twitter account's password.")
	  );
	
  }

  
}

/**
 * Implementation of hook_nodeapi
 
function facebook_grabbit_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL){
	//update
	if($node->type == 'profile' && $op == 'update'){
		module_load_include('inc', 'twitter');

		$verify = FALSE;

		$pass = $node->password;
		$name = $node->screen_name;

		if (!empty($pass)) {
		    $verify = TRUE;
		}

		if ($verify) {
		  $valid = twitter_authenticate($name, $pass);
		  if (!$valid) {
		    drupal_set_message(t('Twitter authentication failed. Please check your account name and try again.'));
		  }
		  else{
			$account=array('screen_name'=>$name,
			               'password' => $pass,
			               'uid' => $node->uid);
		    twitter_user_save($account, TRUE);	
		    drupal_set_message(t('The twitter account was setted up on Grabbit '));
		  }
		}
		
	}
}
*/