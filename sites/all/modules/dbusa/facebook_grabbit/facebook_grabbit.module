<?
//$Id$
 
/**
 * Implementation of hook_menu()
 */
function facebook_grabbit_menu () {
  $items['app/facebook'] = array( 
    'title' => 'Grabbit.net Facebook', 
    'page callback' => 'facebook_grabbit_facebook', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  ); 

  $items['facebook/status'] = array( 
    'title' => 'Update Facebook Status', 
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('facebook_grabbit_update_form'),
    'access arguments' => array('access content')
  );
  $items['facebook/stream'] = array( 
    'title' => 'View my Facebook Stream', 
    'page callback' => 'facebook_grabbit_stream', 
    'access arguments' => array('access content')
  );
  $items['facebook/feed'] = array( 
    'title' => 'View my Facebook Feed', 
    'page callback' => 'facebook_grabbit_feed', 
    'access arguments' => array('access content')
  );
  $items['twitter/stream'] = array( 
    'title' => 'View my Twitter stream', 
    'page callback' => 'facebook_grabbit_twitter_stream', 
    'access arguments' => array('access content')
  );
  $items['twitface/stream'] = array( 
    'title' => 'View my Twitter/Facebook stream', 
    'page callback' => 'facebook_grabbit_twitter_facebook', 
    'access arguments' => array('access content')
  );
  $items['stream/user'] = array( 
    'title' => 'View my personal stream', 
    'page callback' => 'facebook_grabbit_private_view', 
    'access arguments' => array('access content')
  );
  
  return $items;
}

/**
 * Implementation of hook_form()
 */

function facebook_grabbit_update_form($form_state){

	require_once("facebook/facebook.php");
	require_once("facebook/facebook_desktop.php");
	include("facebook/config.php");
	
	global $user;
	$fuser = facebook_grabbit_get_fid($user->uid);
	
	if ($fuser){
		
		$suser=$fuser->fid;
		$session_key=$fuser->kid;

		$facebook = new FacebookDesktop($api_key, $secret);
		$facebook->set_user($suser, $session_key);

		$status = $facebook->api_client->call_method("facebook.status.get", array('uid'=>$suser, 'limit'=>'5'));

		$form['cstatus'] = array(
		  '#type' => 'item',
		  '#title' => t('Current Facebook Status'),
		  '#value' => $status[0]['message'],
		);

		$form['status'] = array(
		    '#type' => 'textfield',
		    '#title' => t('New Status'),
		    '#size' => 60,
		    '#maxlength' => 255,
		    '#required' => true );

		$form['submit'] = array(
		    '#type' => 'submit',
		    '#value' => t('Update Status'),
		);	
	}
	else{
		$form['facebook'] = array(
		  '#type' => 'item',
		  '#title' => t('Allow Grabbit to update your Facebook Status'),
		  '#value' => l('<img src="'.base_path().drupal_get_path('module', 'facebook_grabbit').'/facebook/connect.gif">','http://apps.facebook.com/onixmedia/?duid='.$user->uid,array('html'=>TRUE,'attributes'=>array('target'=>'blank'))),
		);
	}
	
	return $form;
	
}

function facebook_grabbit_update_form_submit ($form, &$form_state) {
	
	require_once("facebook/facebook.php");
	require_once("facebook/facebook_desktop.php");
	include("facebook/config.php");
	
	global $user;
	$fuser = facebook_grabbit_get_fid($user->uid);
	
	$suser=$fuser->fid;
	$session_key=$fuser->kid;
	
	$facebook = new FacebookDesktop($api_key, $secret);
	$facebook->set_user($suser, $session_key);
	
	$facebook->api_client->call_method('facebook.users.setStatus', array('api_key' => $api_key,
	                                                                     'uid'=>"$suser",
	                                                                     'status'=>$form_state['values']['status']));
	
	drupal_set_message('You have changed your facebook status');
}

function facebook_grabbit_feed(){

	require_once("facebook/facebook.php");
	require_once("facebook/facebook_desktop.php");
	include("facebook/config.php");
	$app_id='90953553995';
	
	global $user;
	$fuser = facebook_grabbit_get_fid($user->uid);

	if ($fuser){
		
		$suser=$fuser->fid;
		$session_key=$fuser->kid;

		$facebook = new FacebookDesktop($api_key, $secret);
		$facebook->set_user($suser, $session_key);
		$s_key=$facebook->api_client->session_key;
		
		//Generate the md5 sig for facebook application
		$args = array(
		  'app_id' => $app_id,
		  'session_key' => $s_key,
		  'source_id'=>$suser
		);

		$request_str = '';

		foreach ($args as $key => $value)
		{
		  $request_str .= $key . '=' . $value;
		}

		$sig = $request_str . $secret;
		$sig = md5($sig);
		
		$output = drupal_http_request('http://www.facebook.com/activitystreams/feed.php?source_id='.$suser.'&app_id='.$app_id.'&session_key='.$facebook->api_client->session_key.'&sig='.$sig.'&v=0.7&read', $headers = array(), $method = 'GET', $data = NULL, $retry = 3);
		
        print $output->data;
		
	}
	else{
		return "You have no facebook account yet";
	}

	
}

function facebook_grabbit_stream(){

	require_once("facebook/facebook.php");
	require_once("facebook/facebook_desktop.php");
	include("facebook/config.php");
	$app_id='90953553995';
	
	global $user;
	$fuser = facebook_grabbit_get_fid($user->uid);
	
	if ($fuser){
		
		$suser=$fuser->fid;
		$session_key=$fuser->kid;

		$facebook = new FacebookDesktop($api_key, $secret);
		$facebook->set_user($suser, $session_key);
		
		$stream = $facebook->api_client->stream_get($suser);
		
		$friends = $stream['profiles'];
		$posts = $stream['posts'];

		foreach($friends as $friend){
			$profiles[$friend['id']] = $friend; 
		}

		foreach ($posts as $post){
			if(!$post['attachment']){ //STATUS UPDATE
				$target='';
				if($post['target_id'])
				  $target='> <a href="'.$profiles[$post['actor_id']]['url'].'">'.$profiles[$post['target_id']]['name'].'</a>';
				$output .= prepeare_status_update($post, $profiles[$post['actor_id']],$target);
			}else{		             // OTHER UPDATES SUPPORTED
				$output .= prepeare_standar_update($post, $profiles[$post['actor_id']]);
			}
		
			
	  }
	return $output;
    }
	else{
		return "You have no facebook account yet";
	}

	
}


/**
 * Facebook aplication using facebook API()
 */

	
function facebook_grabbit_facebook(){

  // the facebook client library
  include_once 'facebook/facebook.php';

  include_once("facebook/config.php");  

  $facebook = new Facebook($api_key, $secret);
  $facebook->require_frame();
  $user = $facebook->require_login();

  $duid=$_GET["duid"];

  if (!$facebook->api_client->users_hasAppPermission("status_update")  || !$facebook->api_client->users_hasAppPermission("offline_access") || !$facebook->api_client->users_hasAppPermission("read_stream")){  
    $output .= '<fb:prompt-permission perms="status_update, offline_access, read_stream" next_fbjs="after(\'http://apps.facebook.com/onixmedia/?duid='.$duid.'\')"><strong>Let Grabbit.net update your status!</strong></fb:prompt-permission>';  
    $visibility = "none";  
  }else{
    $visibility = "block";
  
	if(!$_GET["duid"]){
	    $output = "There was a problem accessing your Grabbit account, please go back to grabbit.net and try again";	
	}else{
	  	$sessionkey = $_REQUEST['fb_sig_session_key'];
	print_r($sessionkey);
	    $fid=$facebook->api_client->user;
	    facebook_grabbit_save_fid($_GET["duid"],$fid,$sessionkey);
	}
    
  }  

  $output .='<div id="statusdiv" style="display:'.$visibility.';">  
	   <strong>Thank you for installing this app, go to Grabbit to change your facebook status</strong>
	</div>  
	<script>
	function after(url){
	  document.setLocation(url);
	}
	</script>';

  print $output;
}

/**
 * Save the facebook ID and Key on the facebook app()
 */
function facebook_grabbit_save_fid($user,$fid,$kid){

  $check = facebook_grabbit_get_fid($user);

  if(!$check){
    db_query("INSERT INTO {facebook_grabbit} (uid, kid, fid) VALUES (%d, '%s', %d)",$user,$kid,$fid);	
    $result = TRUE;
  }
  else{
    db_query("UPDATE {facebook_grabbit} SET kid='%s', fid=%d WHERE uid=%d",$kid,$fid,$user);	
    $result = TRUE;
  }

  return $result;

}

/**
 * Get the facebook ID and Key from any user()
 */
function facebook_grabbit_get_fid($user){
	
  $result = db_query("SELECT * FROM {facebook_grabbit} WHERE uid = %d",$user);

  if ($user = db_fetch_object($result)) {
	$user = $user;
  }
  else{
    $user = FALSE;	
  }

  return $user;
}



function prepeare_status_update($post,$user,$target){
	
	
	$output = '<div class="facebook-post" id="fb_story_'.$post['post_id'].'">
	<div class="facebook-post-header"><a title="'.$user['name'].'" class="facebook-story-pic" href="'.$user['url'].'"><span class="facebook-user-pic"><img class="facebook-image-s" alt="'.$user['name'].'" src="'.$user['pic_square'].'"/></span></a>
	<a title="'.$user['name'].'" class="facebook-story-name" href="'.$post['permalink'].'"><span class="facebook-user-name">'.$user['name'].' </span></a>'.$target.'
	</div>
	<div class="facebook-post-body">
	  '.$post['message'].'
	</div>
	</div>';
	
	return $output;
}

function prepeare_standar_update($post,$user){
	
	$attachment = '';
	
	if($post['attachment']['name'])
	  $attachment .='<p><span class="facebook-attach-title">'.$post['attachment']['name'].'</span></p>';
	
	if($post['attachment']['description'])
	  $attachment .='<p><span class="facebook-attach-text">'.$post['attachment']['description'].'</span></p>';

    if($post['attachment']['media']!=''){
	  	foreach($post['attachment']['media'] as $media){
	      if($media['type'] =="photo"){
		    $attachment .='<span class="facebook-attach-photo"><a href="'.$media['href'].'"><img src="'.$media['src'].'" /></a></span>';
	      }
		  if($media['type'] =="link"){
		    $attachment .='<span class="facebook-attach-link"><a href="'.$media['href'].'"><img src="'.$media['src'].'" /></a></span>';
	      }
	      if($media['type'] =="video"){
		    $attachment .='<span class="facebook-attach-video">Video: <a href="'.$media['href'].'"><img src="'.$media['src'].'" /></a></span>';
	      }
		}
    }
	
	
	$output = '<div class="facebook-post" id="fb_story_'.$post['post_id'].'">
	<div class="facebook-post-header"><a title="'.$user['name'].'" class="facebook-story-pic" href="'.$user['url'].'"><span class="facebook-user-pic"><img class="facebook-image-s" alt="'.$user['name'].'" src="'.$user['pic_square'].'"/></span></a>
	<a title="'.$user['name'].'" class="facebook-story-name" href="'.$post['permalink'].'"><span class="facebook-user-name">'.$user['name'].'</span></a>
	</div>
	<div class="facebook-post-body">
	  '.$post['message'].'
	</div>'.$attachment.'
	</div>';
	
	return $output;
}


function facebook_grabbit_twitter_stream(){
	global $user;
	
	$accounts = module_invoke_all('twitter_accounts', $user, TRUE);
	if(count($accounts)){
		$account = array_shift($accounts); 

		$output = facebook_grabbit_get_friends_timeline($account);	
	}
	else{
		$output = "You dont have a twitter account yet";
	}
	
	
	return $output;
}

/**
* Grab the latest posts from you and your twitter friends.
*/
function facebook_grabbit_get_friends_timeline($account) {

  $twitter_encrypted = base64_encode($account['screen_name'] .':'. $account['password']);

  $headers = array('Authorization' => 'Basic '. $twitter_encrypted,
                   'Content-type' => 'application/x-www-form-urlencoded');

  $result = drupal_http_request('http://twitter.com/statuses/friends_timeline.xml', $headers, 'GET');

  $xml = new SimpleXMLElement($result->data);

  foreach ($xml->status as $message){
		
	$output .= theme_twitter_message($message);

  }
  return $output;
}

function facebook_grabbit_private_view(){
	
	global $user;
	
	require_once("facebook/facebook.php");
	require_once("facebook/facebook_desktop.php");
	include("facebook/config.php");
	$app_id='90953553995';
	
	$view = views_get_view('grabbit_public_stream');
	$view->execute();

    foreach($view->result as $node){
	  $twitface[$node->node_created]=$node;
    }
	
	$fuser = facebook_grabbit_get_fid($user->uid);
	
	if ($fuser){
		$fb = TRUE;
		$suser=$fuser->fid;
		$session_key=$fuser->kid;

		$facebook = new FacebookDesktop($api_key, $secret);
		$facebook->set_user($suser, $session_key);
		
		$stream = $facebook->api_client->call_method('facebook.Stream.get', array('session_key' => $session_key,
		                                                                     'viewer_id'=>$suser,    
		                                                                     'limit'=>"15"));
		$friends = $stream['profiles'];
		$posts = $stream['posts'];
		
		foreach($friends as $friend){
			$profiles[$friend['id']] = $friend; 
		}
		
		foreach ($posts as $post){
			$twitface[$post['created_time']]=$post;
		}
				
	}else{
	    $fb = FALSE;
	}
	
	$accounts = module_invoke_all('twitter_accounts', $user, TRUE);
	if(count($accounts)){
		$tw = TRUE;
		$account = array_shift($accounts); 
		
		$twitter_encrypted = base64_encode($account['screen_name'] .':'. $account['password']);
		$headers = array('Authorization' => 'Basic '. $twitter_encrypted,
		                   'Content-type' => 'application/x-www-form-urlencoded');

		$result = drupal_http_request('http://twitter.com/statuses/friends_timeline.xml', $headers, 'GET');
		$xml = new SimpleXMLElement($result->data);

		foreach ($xml->status as $message){

		  $time = strtotime($message->created_at);
		  $twitface[$time]=$message;

		}
	}
	else{
		$tw = FALSE;
	}
	
	if(!$tw && !$fb){
	  return "You have no Twitter or Facebook accounts yet";	
	}
	else{
		ksort($twitface);
		$result = array_reverse($twitface);
		foreach($result as $entry){
			if(is_array($entry)){
				if(!$entry['attachment']){ //STATUS UPDATE
					$target='';
					if($entry['target_id'])
					  $target='> <a href="'.$profiles[$entry['actor_id']]['url'].'">'.$profiles[$entry['target_id']]['name'].'</a>';
					$output .= prepeare_status_update($entry, $profiles[$entry['actor_id']],$target);
				}else{		             // OTHER UPDATES SUPPORTED
					$output .= prepeare_standar_update($entry, $profiles[$entry['actor_id']]);
				}
			}
			else{
				if($entry->nid){
					$node=node_load($entry->nid);
					$output .= theme('node',$node);
				}
				else{
                  $output .= theme_twitter_message($entry);
                }
				
			}
		}	
	}
	
	return $output;

}

/*
** Merge of facebook and twitter feeds
*/
function facebook_grabbit_twitter_facebook(){
	global $user;
	
	require_once("facebook/facebook.php");
	require_once("facebook/facebook_desktop.php");
	include("facebook/config.php");
	$app_id='90953553995';
	
	$fuser = facebook_grabbit_get_fid($user->uid);
	
	if ($fuser){
		$fb = TRUE;
		$suser=$fuser->fid;
		$session_key=$fuser->kid;

		$facebook = new FacebookDesktop($api_key, $secret);
		$facebook->set_user($suser, $session_key);
		
		$stream = $facebook->api_client->call_method('facebook.Stream.get', array('session_key' => $session_key,
		                                                                     'viewer_id'=>$suser,    
		                                                                     'limit'=>"15"));
		$friends = $stream['profiles'];
		$posts = $stream['posts'];
		
		foreach($friends as $friend){
			$profiles[$friend['id']] = $friend; 
		}
		
		foreach ($posts as $post){
			$twitface[$post['created_time']]=$post;
		}
				
	}else{
	    $fb = FALSE;
	}
	
	$accounts = module_invoke_all('twitter_accounts', $user, TRUE);
	if(count($accounts)){
		$tw = TRUE;
		$account = array_shift($accounts); 
		
		$twitter_encrypted = base64_encode($account['screen_name'] .':'. $account['password']);
		$headers = array('Authorization' => 'Basic '. $twitter_encrypted,
		                   'Content-type' => 'application/x-www-form-urlencoded');

		$result = drupal_http_request('http://twitter.com/statuses/friends_timeline.xml', $headers, 'GET');
		$xml = new SimpleXMLElement($result->data);

		foreach ($xml->status as $message){

		  $time = strtotime($message->created_at);
		  $twitface[$time]=$message;

		}
	}
	else{
		$tw = FALSE;
	}
	
	if(!$tw && !$fb){
	  return "You have no Twitter or Facebook accounts yet";	
	}
	else{
		ksort($twitface);
		$result = array_reverse($twitface);
		foreach($result as $entry){
			if(is_array($entry)){
				if(!$entry['attachment']){ //STATUS UPDATE
					$target='';
					if($entry['target_id'])
					  $target='> <a href="'.$profiles[$entry['actor_id']]['url'].'">'.$profiles[$entry['target_id']]['name'].'</a>';
					$output .= prepeare_status_update($entry, $profiles[$entry['actor_id']],$target);
				}else{		             // OTHER UPDATES SUPPORTED
					$output .= prepeare_standar_update($entry, $profiles[$entry['actor_id']]);
				}
			}
			else{
				$output .= theme_twitter_message($entry);
			}
		}	
	}
	
	return $output;
	
}

/**
* Theme each meesage.
*/
function theme_twitter_message($message){

	$output = '<div class="twitter-message-stream"><img src="'.$message->user->profile_image_url.'" /><strong>'.$message->user->name.'</strong>
	          <p>'.$message->text . "  </p><p> on " . format_date(strtotime($message->created_at)) . "</p></div><br /><br />";
	return $output; 
}