<?

/**
 * Implementation of hook_menu()
 */
function grabbit_invites_menu()
{
  $items['grabbit/invite/twitter'] = array( 
    'title' => 'Invite Twitter', 
    'page callback' => 'grabbit_invites_twitter', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  ); 

  $items['grabbit/invite/facebook'] = array( 
    'title' => 'Invite Facebook', 
    'page callback' => 'grabbit_invites_facebook', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );

 return $items;

}

function grabbit_invites_twitter(){
	
	global $user;
    $accounts = oauth_twitter_get_uid($user->uid);

	if($accounts){
		$id=arg(3);

		if($id){
			
				$module_name='oauth_twitter';
				include_once drupal_get_path('module', $module_name).'/includes/EpiCurl.php';
				include_once drupal_get_path('module', $module_name).'/includes/EpiOAuth.php';
				include_once drupal_get_path('module', $module_name).'/includes/EpiTwitter.php';
				include drupal_get_path('module', $module_name).'/includes/secret.php';

				$twitterObj = new EpiTwitter($consumer_key, $consumer_secret);
				$token = unserialize($accounts->config);
				$twitterObj->setToken($token['token'], $token['secret']);
				
				$invite = grabbit_invites_send_invite($id,'Invite to join grabbit','Join grabbit');
				$template = t(_grabbit_invites_get_mail());
				$tokens = _invite_token_types($invite);
				$message = token_replace_multiple($template, $tokens);
			

				$twitterObj->post_statusesUpdate(array('status' =>'D '.$id.' '.$message));

				print "You have invited this user to join Grabbit, we will notify you after your friend accepts your invitation.";
		}
	
	}
	
}

function grabbit_invites_facebook(){
	
	global $user;
	
	$fuser = facebook_grabbit_get_fid($user->uid);
	
	if ($fuser && arg(3) && arg(4)){
	  $module_name='facebook_grabbit';
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook.php");
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook_desktop.php");
	  include(drupal_get_path('module', $module_name)."/facebook/config.php");

	  $suser=$fuser->fid;
	  $session_key=$fuser->kid;
      try{
	
	    $facebook = new FacebookDesktop($api_key, $secret);
	
	    if ($facebook->set_user($suser, $session_key) != null){
		  drupal_set_message("Facebook connection failed","error");
	    }
	    else{
		
		 	$invite = grabbit_invites_send_invite(arg(4),'Invite to join grabbit','Join grabbit');
			$template = t(_grabbit_invites_get_mail());
			$tokens = _invite_token_types($invite);
			$message = token_replace_multiple($template, $tokens);
		
				$testing = $facebook->api_client->call_method('facebook.notifications.send', array('api_key' => $api_key,
										       'to_ids'=>arg(3),
										       'notification'=>$message,
										));	
			if($testing){
				invite_save($invite);
				print "You have invited this user to join Grabbit, we will notify you after your friend accepts your invitation."; 
			}else{
				print "You have no invitations left for FACEBOOK today, pleace come back tomorrow";
			}
		
	        						
											
	    }
	  }catch(FacebookRestClientException $e){
		print "error";
	  }
    }
	
}

function grabbit_invites_send_invite($user,$subject,$message){
	$code = invite_generate_code();
    $invite = _invite_substitutions(array(
      'email' => $user,
      'code'  => $code,
      'resent'  => 0,
      'data'  => array('subject' => $subject, 'message' => $message),
    ));

    return $invite;

}

/**
 * Returns the configured or default e-mail template.
 *
 * @return
 *   The localized e-mail body.
 */
function _grabbit_invites_get_mail() {
  $template = t("Your friend, [inviter-raw], has invited you to join [site-name] at <a href='[join-link]'>[join-link]</a>");

  return $template;
}

function grabbit_invites_get_invited($name){
	global $user;
	
	$result = db_result(db_query("SELECT * FROM {invite} WHERE email = '%s' AND canceled=0 AND uid=%d",$name,$user->uid));

    if(db_affected_rows($result)){
	  	if($result->joined){
          return 2;
	    }else{
          return 1;
	    }
    }else{
	  return 0;
    }
}

function grabbit_invites_check_facebook_user($facebook){
    global $user;
	$result=db_query("SELECT * FROM {facebook_grabbit} WHERE fid=%d",$facebook['uid']);
	$joined="Joined grabbit!";
	while($face_user=db_fetch_object($result)){
		$amigo=user_load(array('uid'=>$face_user->uid));
	    if($amigo->status==1){
		  $status = friendlist_api_relation_status_calculate($user->uid, $amigo->uid, 1);
		  
		  switch($status){
		  case 'TW_BOTH':
		    $friends='You are grabbit friends!';
		  break;
		  case 'TW_1_TO_2_P':
		    $friends='Your friend request is pending';
		  break;
		  case 'TW_2_TO_1_P':
		    $friends='He requested you to be friends in grabbit!';
		  break;	
		  default:
	        $friends=l('Send friend request!', 'friendlist/add/'.$amigo->uid.'/'.$user->uid,array('query'=>'destination=user/me/myfriends/grabbit_friends'));
		  break;
		  }
	    }
	  return array('joined'=>$joined,'friends'=>$friends);
	}
	
	return 0;
	
}

function grabbit_invites_check_twitter_user($twitter){
	
}