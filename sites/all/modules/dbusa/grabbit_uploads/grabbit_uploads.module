<?

/*
$headers['username']='ivanfuyivara';
$headers['password']='internet';
$headers['key']='15AMNQXY29584d82ed24433d294939c04c7f989e';
$frog = drupal_http_request('http://yfrog.com/api/upload', array('Content-Type' => 'multipart/form-data'), $method = 'POST', http_build_query($headers, '', '&'), $retry = 3);
*/

/**
 * Implementation of hook_menu()
 */
function grabbit_uploads_menu()
{
  $items['yfrog/upload'] = array( 
    'page callback' => 'grabbit_uploads_file_form_getit', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  ); 

  return $items;
}


function grabbit_uploads_file_form($form_state){
	
	$form['media'] = array(
		  '#type' => 'file',
		  '#title' => t('Upload an image'),
		  '#size' => 10,
		);
		
		$form['username'] = array(
		    '#type' => 'textfield',
		    '#value' => 'ivanfuyivara' );
			$form['password'] = array(
			    '#type' => 'textfield',
			    '#value' => 'internet' );
				$form['key'] = array(
				    '#type' => 'textfield',
				    '#value' => '15AMNQXY29584d82ed24433d294939c04c7f989e' );
			
	$form['submit'] = array(
	    '#type' => 'submit',
	    '#value' => t('Send'),
	    '#weight'=>4
		);
	
	return $form;
}

class yfrog
{
  /* 
   * variable declarations
   */
  var $post_url='http://yfrog.com/api/upload';
  var $url='';
  var $post_data='';
  var $result='';
  var $tweet='';
  var $return='';
 
/*
* @param1 is the array of data which is to be uploaded
* @param2 if passed true will display result in the XML format, default is false
* @param3 if passed true will update status twitter,default is false
*/
 
  function __construct($data,$return=false,$tweet=false)
  {
    $this->post_data=$data;
    if(empty($this->post_data) || !is_array($this->post_data)) //validates the data
      $this->throw_error(0);
    $this->display=$return;
    $this->tweet=$tweet;
 
  }
 
  function post()
  {
    $this->url=$this->post_url; //assigns URL for curl request based on the nature of request by user
    $this->makeCurl();
  }
  private function makeCurl()
  {
    $curl = curl_init();
    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 2);
    curl_setopt($curl, CURLOPT_HEADER, false);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($curl, CURLOPT_BINARYTRANSFER, 1);
    curl_setopt($curl, CURLOPT_URL, $this->url);
    curl_setopt($curl, CURLOPT_POST, 3);
    curl_setopt($curl, CURLOPT_POSTFIELDS, $this->post_data);
    $this->result = curl_exec($curl);
    curl_close($curl);
    if($this->display)
    {
      $this->result;
    }
 
  }
  private function throw_error($code) //handles few errors, you can add more
 
  {
    switch($code)
    {
      case 0:
        echo 'Think, you forgot to pass the data';
        break;
      default:
        echo 'Something just broke !!';
        break;
    }
    exit;
  }
} //class ends here


function grabbit_uploads_file_form_getit(){
	
	  $file=$_FILES['media'];
	  $postfields = array();

	  $postfields['username'] = 'ivanfuyivara';

	  $postfields['password'] = "internet";
	  $postfields['media'] = "@$file[tmp_name]";

	  $t=new yfrog($postfields,true,true);
	  $t->post();
	  $xml = new SimpleXMLElement('<rsp stat="ok"><mediaid>14iywj</mediaid><mediaurl>http://yfrog.com/14iywj</mediaurl></rsp>');
	  
	print $xml->mediaurl;
}


function grabbit_uploads_save_data(){

  $user=$_GET['user'];
  $config['username']=$_GET['username'];
  $config['password']=$_GET['password'];
	
  $check = grabbit_uploads_get_uid($user);

  $savetodb = serialize($config);

  if(!$check){
    db_query("INSERT INTO {grabbit_uploads} (uid,config) VALUES (%d, '%s')",$user,$savetodb);	
    $result = TRUE;
  }
  else{
    db_query("UPDATE {grabbit_uploads} SET config='%s' WHERE uid=%d",$savetodb,$user);	
    $result = TRUE;
  }

  return $result;
  
}

function grabbit_uploads_get_uid($user){
	
  $result = db_query("SELECT * FROM {grabbit_uploads} WHERE uid = %d",$user);

  if ($user = db_fetch_object($result)) {
	$config = unserialize($user->config);
  }
  else{
    $config = FALSE;	
  }

  return $config;
}
